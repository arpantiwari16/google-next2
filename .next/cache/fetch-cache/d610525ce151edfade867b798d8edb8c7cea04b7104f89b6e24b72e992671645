{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","cache-control":"private","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Mon, 11 Mar 2024 17:06:24 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "customsearch#search",
  "url": {
    "type": "application/json",
    "template": "https://www.googleapis.com/customsearch/v1?q={searchTerms}&num={count?}&start={startIndex?}&lr={language?}&safe={safe?}&cx={cx?}&sort={sort?}&filter={filter?}&gl={gl?}&cr={cr?}&googlehost={googleHost?}&c2coff={disableCnTwTranslation?}&hq={hq?}&hl={hl?}&siteSearch={siteSearch?}&siteSearchFilter={siteSearchFilter?}&exactTerms={exactTerms?}&excludeTerms={excludeTerms?}&linkSite={linkSite?}&orTerms={orTerms?}&dateRestrict={dateRestrict?}&lowRange={lowRange?}&highRange={highRange?}&searchType={searchType}&fileType={fileType?}&rights={rights?}&imgSize={imgSize?}&imgType={imgType?}&imgColorType={imgColorType?}&imgDominantColor={imgDominantColor?}&alt=json"
  },
  "queries": {
    "request": [
      {
        "title": "Google Custom Search - a'}",
        "totalResults": "13500000",
        "searchTerms": "a'}",
        "count": 10,
        "startIndex": 1,
        "inputEncoding": "utf8",
        "outputEncoding": "utf8",
        "safe": "off",
        "cx": "f213d44e1ec82403c"
      }
    ],
    "nextPage": [
      {
        "title": "Google Custom Search - a'}",
        "totalResults": "13500000",
        "searchTerms": "a'}",
        "count": 10,
        "startIndex": 11,
        "inputEncoding": "utf8",
        "outputEncoding": "utf8",
        "safe": "off",
        "cx": "f213d44e1ec82403c"
      }
    ]
  },
  "context": {
    "title": "gonext"
  },
  "searchInformation": {
    "searchTime": 0.377658,
    "formattedSearchTime": "0.38",
    "totalResults": "13500000",
    "formattedTotalResults": "13,500,000"
  },
  "items": [
    {
      "kind": "customsearch#result",
      "title": "Arduino 4x4 Keypad Coding error - Programming Questions ...",
      "htmlTitle": "Arduino 4x4 Keypad Coding error - Programming Questions ...",
      "link": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828",
      "displayLink": "forum.arduino.cc",
      "snippet": "Nov 29, 2020 ... ... A'}, {'4', '5', '6', 'B'}, {'7', '8', '9', 'C'}, {'*', '0', '#', 'D'} }; byte rowPins[ROWS] = {9, 8, 7, 6}; byte colPins[COLS] = {5, 4, 3, 2}; ...",
      "htmlSnippet": "Nov 29, 2020 \u003cb\u003e...\u003c/b\u003e ... \u003cb\u003eA&#39;}\u003c/b\u003e, {&#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;B\u003cb\u003e&#39;}\u003c/b\u003e, {&#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;C\u003cb\u003e&#39;}\u003c/b\u003e, {&#39;*&#39;, &#39;0&#39;, &#39;#&#39;, &#39;D\u003cb\u003e&#39;}\u003c/b\u003e }; byte rowPins[ROWS] = {9, 8, 7, 6}; byte colPins[COLS] = {5, 4, 3, 2};&nbsp;...",
      "cacheId": "XgMdtxt86pgJ",
      "formattedUrl": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828",
      "htmlFormattedUrl": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcR7MTssePEuEs9fRVEw02x9sG9TZoO43dPgX4Ma-vTv27lgq4udh-pFTQ",
            "width": "140",
            "height": "25"
          }
        ],
        "imageobject": [
          {
            "url": "https://europe1.discourse-cdn.com/arduino/original/3X/1/f/1f6eb1c9b79d9518d1688c15fe9a4b7cdd5636ae.svg"
          }
        ],
        "person": [
          {
            "name": "kmaxwell",
            "url": "kmaxwell"
          },
          {
            "name": "groundFungus",
            "url": "groundFungus"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "kmaxwell",
            "url": "kmaxwell"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "kmaxwell",
            "url": "kmaxwell"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "kmaxwell",
            "url": "kmaxwell"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "kmaxwell",
            "url": "kmaxwell"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "kmaxwell",
            "url": "kmaxwell"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "TomGeorge",
            "url": "TomGeorge"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          },
          {
            "name": "TomGeorge",
            "url": "TomGeorge"
          },
          {
            "name": "johnwasser",
            "url": "johnwasser"
          },
          {
            "name": "anon73444976",
            "url": "anon73444976"
          }
        ],
        "organization": [
          {
            "name": "Arduino Forum"
          }
        ],
        "interactioncounter": [
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          }
        ],
        "metatags": [
          {
            "og:image": "https://europe1.discourse-cdn.com/arduino/original/3X/1/f/1f6eb1c9b79d9518d1688c15fe9a4b7cdd5636ae.svg",
            "theme-color": "#008184",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "Arduino 4x4 Keypad Coding error",
            "article:published_time": "2020-11-29T16:41:34+00:00",
            "og:site_name": "Arduino Forum",
            "twitter:url": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828",
            "og:title": "Arduino 4x4 Keypad Coding error",
            "og:description": "Hi,  I am doing a design project for one of my courses, and one of our tests for the keypad is to press a button on the keypad, and have it output the location of the button on the keypad (row, col). My code is below, but I keep getting an error saying \"expected unqualified-id before 'return'\" for the last line of code that says 'return 0'. I can't seem to find anything to fix this error so any help would be greatly appreciated!  #include \u003cKey.h\u003e  #include \u003cKeypad.h\u003e  #include \u003ckeypad.h\u003e  const ...",
            "og:ignore_canonical": "true",
            "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover",
            "twitter:description": "Hi,  I am doing a design project for one of my courses, and one of our tests for the keypad is to press a button on the keypad, and have it output the location of the button on the keypad (row, col). My code is below, but I keep getting an error saying \"expected unqualified-id before 'return'\" for the last line of code that says 'return 0'. I can't seem to find anything to fix this error so any help would be greatly appreciated!  #include \u003cKey.h\u003e  #include \u003cKeypad.h\u003e  #include \u003ckeypad.h\u003e  const ...",
            "og:article:section": "Using Arduino",
            "og:url": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828",
            "og:article:section:color": "0088CC"
          }
        ],
        "discussionforumposting": [
          {
            "datemodified": "2020-11-29T16:41:34Z",
            "articlesection": "Programming Questions",
            "position": "1",
            "text": "Hi, I am doing a design project for one of my courses, and one of our tests for the keypad is to press a button on the keypad, and have it output the location of the button on the keypad (row,...",
            "headline": "Arduino 4x4 Keypad Coding error",
            "url": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828",
            "datepublished": "2020-11-29T16:41:34Z",
            "mainentityofpage": "https://forum.arduino.cc/t/arduino-4x4-keypad-coding-error/684828"
          }
        ],
        "comment": [
          {
            "datemodified": "2020-11-29T17:03:11Z",
            "position": "2",
            "text": "See comments: #include \u003cKey.h\u003e #include \u003cKeypad.h\u003e #include \u003ckeypad.h\u003e const byte ROWS = 4; const byte COLS = 4; int index; //int LIST_MAX = 16; // this causes an error. Need to change the...",
            "datepublished": "2020-11-29T17:03:11Z"
          },
          {
            "datemodified": "2020-11-29T17:10:36Z",
            "position": "3",
            "text": "if(hexaKeys[ROWS][COLS] That would be out of bounds. It's hard to tell what the for loop is doing there",
            "datepublished": "2020-11-29T17:10:36Z"
          },
          {
            "datemodified": "2020-11-29T19:53:30Z",
            "position": "4",
            "text": "Hi, thank you for the responses. See below for proper formatting: #include \u003cKey.h\u003e #include \u003cKeypad.h\u003e #include \u003ckeypad.h\u003e const byte ROWS = 4; const byte COLS = 4; int index; int LIST_MAX=16;...",
            "datepublished": "2020-11-29T19:53:30Z"
          },
          {
            "datemodified": "2020-11-29T19:57:13Z",
            "position": "5",
            "text": "int LIST_MAX=16; Oops if (hexaKeys[ROWS][COLS] That's still out of bounds, and I still can't see what the for loop is for. index = hexaKeys[ROWS][COLS]; Again, out of array bounds.",
            "datepublished": "2020-11-29T19:57:13Z"
          },
          {
            "datemodified": "2020-11-29T20:32:41Z",
            "position": "6",
            "text": "Do you know how I would fix it to be within the bounds?",
            "datepublished": "2020-11-29T20:32:41Z"
          },
          {
            "datemodified": "2020-11-29T20:35:23Z",
            "position": "7",
            "text": "I don't even know what you're trying to do, so a fix is some way off.",
            "datepublished": "2020-11-29T20:35:23Z"
          },
          {
            "datemodified": "2020-11-29T20:46:00Z",
            "position": "8",
            "text": "The goal of the code is to find the location of the button that is being pressed on a 4x4 keypad. So if the button for '6' was pressed, I want the output to be (2,3), meaning 2nd row and 3rd...",
            "datepublished": "2020-11-29T20:46:00Z"
          },
          {
            "datemodified": "2020-11-29T20:56:45Z",
            "position": "9",
            "text": "So, the library gives you a character value, and you want to convert that row/column? A couple of nested loops should do this easily. Why are you using the library in the first place, since...",
            "datepublished": "2020-11-29T20:56:45Z"
          },
          {
            "datemodified": "2020-11-29T21:07:03Z",
            "position": "10",
            "text": "Which library are you referring to? I thought the keypad.h library was necessary for all keypad coding.",
            "datepublished": "2020-11-29T21:07:03Z"
          },
          {
            "datemodified": "2020-11-29T21:22:12Z",
            "position": "11",
            "text": "Yes, I was referring to the keypad library.",
            "datepublished": "2020-11-29T21:22:12Z"
          },
          {
            "datemodified": "2020-11-29T21:29:07Z",
            "position": "12",
            "text": "Okay, is there a library I should be using instead? I also don't know how to get the key without using the keypad library. Will I need to create an array of the keys on the keypad to index...",
            "datepublished": "2020-11-29T21:29:07Z"
          },
          {
            "datemodified": "2020-11-30T07:51:21Z",
            "position": "13",
            "text": "Carry on using the library if it makes it easier for you, but you need a pair of nested for loops, iterating over the rows and columns, to search for the input character.",
            "datepublished": "2020-11-30T07:51:21Z"
          },
          {
            "datemodified": "2020-11-30T08:33:00Z",
            "position": "14",
            "text": "TheMemberFormerlyKnownAsAWOL: Carry on using the library if it makes it easier for you, but you need a pair of nested for loops, iterating over the rows and columns, to search for the input...",
            "datepublished": "2020-11-30T08:33:00Z"
          },
          {
            "datemodified": "2020-11-30T08:45:44Z",
            "position": "15",
            "text": "A switch would introduce another level of mapping that could introduce errors, if the keymap changed, because of duplicated information. A for loop search would maintain consistency automatically....",
            "datepublished": "2020-11-30T08:45:44Z"
          },
          {
            "datemodified": "2020-11-30T09:09:04Z",
            "position": "16",
            "text": "Hi, Use the switch..case with the keyboard library... My missss for .. if.. Tom..",
            "datepublished": "2020-11-30T09:09:04Z"
          },
          {
            "datemodified": "2020-11-30T15:22:06Z",
            "position": "17",
            "text": "kmaxwell: The goal of the code is to find the location of the button that is being pressed on a 4x4 keypad. So if the button for '6' was pressed, I want the output to be (2,3), meaning 2nd...",
            "datepublished": "2020-11-30T15:22:06Z"
          },
          {
            "datemodified": "2020-11-30T15:32:42Z",
            "position": "18",
            "text": "{ Serial.print(row + 1); Serial.print(','); Serial.println(col + 1); }",
            "datepublished": "2020-11-30T15:32:42Z"
          }
        ],
        "itemlist": [
          {
            "itemlistorder": "http://schema.org/ItemListOrderDescending"
          }
        ],
        "cse_image": [
          {
            "src": "https://europe1.discourse-cdn.com/arduino/original/3X/1/f/1f6eb1c9b79d9518d1688c15fe9a4b7cdd5636ae.svg"
          }
        ],
        "sitenavigationelement": [
          {
            "name": "Home",
            "url": "Home"
          },
          {
            "name": "Categories",
            "url": "Categories"
          },
          {
            "name": "FAQ/Guidelines",
            "url": "FAQ/Guidelines"
          },
          {
            "name": "Terms of Service",
            "url": "Terms of Service"
          },
          {
            "name": "Privacy Policy",
            "url": "Privacy Policy"
          }
        ],
        "listitem": [
          {
            "item": "Using Arduino",
            "name": "Using Arduino",
            "position": "1"
          },
          {
            "item": "Programming Questions",
            "name": "Programming Questions",
            "position": "2"
          },
          {
            "position": "1",
            "url": "error: expected unqualified-id before numeric constant"
          },
          {
            "position": "2",
            "url": "Expected unqualified-id before '.' token error"
          },
          {
            "position": "3",
            "url": "Errors in 4x4 Universal Keypad Code for Arduino Uno"
          },
          {
            "position": "4",
            "url": "expected unqualified-id before if"
          },
          {
            "position": "5",
            "url": "expected unqualified-id before '{' token"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Type mismatch for equation in SIMSCAPE - MATLAB Answers ...",
      "htmlTitle": "Type mismatch for equation in SIMSCAPE - MATLAB Answers ...",
      "link": "https://www.mathworks.com/matlabcentral/answers/1876557-type-mismatch-for-equation-in-simscape",
      "displayLink": "www.mathworks.com",
      "snippet": "Dec 12, 2022 ... ... A'}. In foundation.signal.linear.integrator (line 24). x = [1x1 double]. I = {[1x1 double], 'A'}. Source code for PS-integrator (int idt) is ...",
      "htmlSnippet": "Dec 12, 2022 \u003cb\u003e...\u003c/b\u003e ... \u003cb\u003eA&#39;}\u003c/b\u003e. In foundation.signal.linear.integrator (line 24). x = [1x1 double]. I = {[1x1 double], &#39;\u003cb\u003eA&#39;}\u003c/b\u003e. Source code for PS-integrator (int idt) is&nbsp;...",
      "cacheId": "rS41JP67qkEJ",
      "formattedUrl": "https://www.mathworks.com/.../1876557-type-mismatch-for-equation-in-si...",
      "htmlFormattedUrl": "https://www.mathworks.com/.../1876557-type-mismatch-for-equation-in-si...",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTIAhmn4guCpUx1xURpnV8sD9UAyxDNgx0dHystnHw2RBojaJ2NLLAD48bv",
            "width": "311",
            "height": "162"
          }
        ],
        "metatags": [
          {
            "og:image": "https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/images/responsive/thumbnails/generic-og-thumbnail.jpg",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "Type mismatch for equation in SIMSCAPE",
            "confirm-close": "You may have unsaved changes to a question, answer, or comment.",
            "og:title": "Type mismatch for equation in SIMSCAPE",
            "og:image:type": "image/png",
            "csrf-param": "authenticity_token",
            "og:description": "Error compiling Simscape network for model cardsimscape.\r\nCaused by:\r\n['cardsimscape/V12/int idt']: Type mismatch for equation.  The left hand side of the equation is {[1x1 double], '1/s'} and the ...",
            "twitter:image": "https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/images/responsive/thumbnails/generic-og-thumbnail.jpg",
            "viewport": "width=device-width, initial-scale=1.0",
            "twitter:description": "Error compiling Simscape network for model cardsimscape.\r\nCaused by:\r\n['cardsimscape/V12/int idt']: Type mismatch for equation.  The left hand side of the equation is {[1x1 double], '1/s'} and the ...",
            "csrf-token": "cBjtPdJvZZBXQ2jL2xI2kRj9ucLjVv6gboqDdiXiGBEAbGXeYAAJ2Ojeu7AKGdaI7jNI3iyuwY8Ix171lMTsTg",
            "og:url": "https://www.mathworks.com/matlabcentral/answers/1876557-type-mismatch-for-equation-in-simscape"
          }
        ],
        "cse_image": [
          {
            "src": "https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/images/responsive/thumbnails/generic-og-thumbnail.jpg"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Solved: Set Analysis Null Values - Qlik Community - 2162511",
      "htmlTitle": "Solved: Set Analysis Null Values - Qlik Community - 2162511",
      "link": "https://community.qlik.com/t5/New-to-Qlik-Sense/Set-Analysis-Null-Values/td-p/2162511",
      "displayLink": "community.qlik.com",
      "snippet": "Jan 17, 2024 ... I have tried: COUNT({\u003cBelegArt={'U'}, Herk_BelegArt-={'A'}\u003e}ID), but this doesnt work. SonPhanHumanIT_0-1705507704536.png. LOAD ID,. BelegArt ...",
      "htmlSnippet": "Jan 17, 2024 \u003cb\u003e...\u003c/b\u003e I have tried: COUNT({&lt;BelegArt={&#39;U\u003cb\u003e&#39;}\u003c/b\u003e, Herk_BelegArt-={&#39;\u003cb\u003eA&#39;}\u003c/b\u003e&gt;}ID), but this doesnt work. SonPhanHumanIT_0-1705507704536.png. LOAD ID,. BelegArt&nbsp;...",
      "cacheId": "uqwD7Lub0YcJ",
      "formattedUrl": "https://community.qlik.com/t5/New-to-Qlik-Sense/Set...Null.../2162511",
      "htmlFormattedUrl": "https://community.qlik.com/t5/New-to-Qlik-Sense/Set...Null.../2162511",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTZ-TR0Z3u8h4gGLni2NraEOdefoCCKLriqTYd76awzx8UM0GLxXhmXybo",
            "width": "275",
            "height": "183"
          }
        ],
        "metatags": [
          {
            "og:image": "/t5/image/serverpage/image-id/127234i8917B7AA5BA5FCCD/image-size/medium?v=v2&px=400",
            "og:image:width": "978",
            "og:type": "article",
            "article:section": "New to Qlik Sense",
            "article:published_time": "2024-01-17T16:09:23.394Z",
            "og:title": "Set Analysis Null Values",
            "og:image:height": "652",
            "og:description": "Hello Qlik experts, I have a question regarding Set Analysis. I know it might be possible to handle this more elegantly in the backend, but I still want to improve my Set Analysis skills. Here's my scenario: I want to exclude certain values from a field, but I also want to include the null values. H...",
            "article:author": "https://community.qlik.com/t5/user/viewprofilepage/user-id/225864",
            "article:tag": "Set Analysis",
            "node": "new-to-qlik-sense",
            "article:modified_time": "2024-01-17T08:40:00-08:00",
            "viewport": "width=device-width, initial-scale=1.0",
            "page": "ForumTopicPage",
            "og:url": "https://community.qlik.com/t5/New-to-Qlik-Sense/Set-Analysis-Null-Values/td-p/2162511"
          }
        ],
        "cse_image": [
          {
            "src": "https://community.qlik.com/t5/image/serverpage/image-id/127234i8917B7AA5BA5FCCD/image-size/large?v=v2&px=999"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Computer randomly outputs text as if I were holding down a key",
      "htmlTitle": "Computer randomly outputs text as if I were holding down a key",
      "link": "https://www.tenforums.com/general-support/195206-computer-randomly-outputs-text-if-i-were-holding-down-key.html",
      "displayLink": "www.tenforums.com",
      "snippet": "Jun 11, 2022 ... It sounds like you have a stuck key on your keyboard. If using an external USB keyboard with your laptop, unplug it and use the laptop keyboard.",
      "htmlSnippet": "Jun 11, 2022 \u003cb\u003e...\u003c/b\u003e It sounds like you have a stuck key on your keyboard. If using an external USB keyboard with your laptop, unplug it and use the laptop keyboard.",
      "cacheId": "8rZ6T0yPGakJ",
      "formattedUrl": "https://www.tenforums.com/.../195206-computer-randomly-outputs-text-if-...",
      "htmlFormattedUrl": "https://www.tenforums.com/.../195206-computer-randomly-outputs-text-if-...",
      "pagemap": {
        "metatags": [
          {
            "viewport": "width=device-width, minimum-scale=1, maximum-scale=1",
            "vb_meta_bburl": "https://www.tenforums.com"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Solved: AND OR combination condition in set analysis - Qlik ...",
      "htmlTitle": "Solved: AND OR combination condition in set analysis - Qlik ...",
      "link": "https://community.qlik.com/t5/QlikView-App-Dev/AND-OR-combination-condition-in-set-analysis/td-p/786171",
      "displayLink": "community.qlik.com",
      "snippet": "Nov 7, 2014 ... I have a requirement where I need to use OR condition in set analysis. This is my exact requirement what i am looking for. [GIDFLAG={'0'} and BS ...",
      "htmlSnippet": "Nov 7, 2014 \u003cb\u003e...\u003c/b\u003e I have a requirement where I need to use OR condition in set analysis. This is my exact requirement what i am looking for. [GIDFLAG={&#39;0\u003cb\u003e&#39;}\u003c/b\u003e and BS&nbsp;...",
      "cacheId": "TxRrj1hXMG4J",
      "formattedUrl": "https://community.qlik.com/t5/QlikView-App-Dev/AND.../786171",
      "htmlFormattedUrl": "https://community.qlik.com/t5/QlikView-App-Dev/AND.../786171",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSuBuK-nXv7en1xmnyaPaZtCtIwY1Bh7JrJWbFdwgXiyFNktlcR-Vx_gKZQ",
            "width": "392",
            "height": "129"
          }
        ],
        "metatags": [
          {
            "og:image": "https://community.qlik.com/html/assets/qlik-logo1.png",
            "node": "qlikview-app-development",
            "og:type": "article",
            "article:section": "QlikView App Dev",
            "article:published_time": "2014-11-07T05:15:45.723Z",
            "article:modified_time": "2018-04-10T06:22:52-07:00",
            "viewport": "width=device-width, initial-scale=1.0",
            "og:title": "AND OR combination condition in set analysis",
            "page": "ForumTopicPage",
            "og:url": "https://community.qlik.com/t5/QlikView-App-Dev/AND-OR-combination-condition-in-set-analysis/td-p/786171",
            "og:description": "Hi All, I have a requirement where I need to use OR condition in set analysis.  This is my exact requirement what i am looking for. [GIDFLAG={'0'} and BS ={'A','B'} and region={'US'} and [Channel ={'A','B','C'} or ( Channel ={'D'} and custno={'1','2,'3'} )] and vDeli={'LCD'} and PSI='S11] Every time...",
            "article:tag": "swathiraj"
          }
        ],
        "cse_image": [
          {
            "src": "https://community.qlik.com/html/assets/qlik-logo1.png"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Benefit of tool vs. specific prompt instructions - API - OpenAI ...",
      "htmlTitle": "Benefit of tool vs. specific prompt instructions - API - OpenAI ...",
      "link": "https://community.openai.com/t/benefit-of-tool-vs-specific-prompt-instructions/583421",
      "displayLink": "community.openai.com",
      "snippet": "Jan 11, 2024 ... '}, {'role': 'system', 'content': 'The JSON output should be an array of objects, with each object representing a single incident. If there is ...",
      "htmlSnippet": "Jan 11, 2024 \u003cb\u003e...\u003c/b\u003e \u003cb\u003e&#39;}\u003c/b\u003e, {&#39;role&#39;: &#39;system&#39;, &#39;content&#39;: &#39;The JSON output should be an array of objects, with each object representing a single incident. If there is&nbsp;...",
      "cacheId": "ybjfqnH1bYoJ",
      "formattedUrl": "https://community.openai.com/t/benefit-of-tool-vs-specific.../583421",
      "htmlFormattedUrl": "https://community.openai.com/t/benefit-of-tool-vs-specific.../583421",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQRWJHiRNoq93DpThusjfXnT2eBs7y5czUoeu9R1f0mHBl1I1khL3vdSoRC",
            "width": "310",
            "height": "163"
          }
        ],
        "imageobject": [
          {
            "url": "https://global.discourse-cdn.com/openai1/original/3X/3/7/37b0465af49ce945753b8555462012147b0fb27a.svg"
          }
        ],
        "person": [
          {
            "name": "nicktucker4",
            "url": "nicktucker4"
          }
        ],
        "organization": [
          {
            "name": "OpenAI"
          }
        ],
        "interactioncounter": [
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          }
        ],
        "metatags": [
          {
            "og:image": "https://global.discourse-cdn.com/openai1/original/3X/b/3/b32f604c592f9a403d89909a2ac630d941304c08.png",
            "theme-color": "#ffffff",
            "og:type": "website",
            "twitter:card": "summary_large_image",
            "twitter:title": "Benefit of tool vs. specific prompt instructions",
            "article:published_time": "2024-01-11T23:22:00+00:00",
            "og:site_name": "OpenAI Developer Forum",
            "twitter:url": "https://community.openai.com/t/benefit-of-tool-vs-specific-prompt-instructions/583421",
            "og:title": "Benefit of tool vs. specific prompt instructions",
            "og:description": "Hey all,  I’ve been reading about tools lately and wondering if there would be a major benefit vs. using a specific prompt to get my achieved output, which is what I’m doing now.  My ‘tool’ would basically specify the kind of JSON output I want, which is what I’m doing via the following prompts now:          {'role': 'system',          'content': 'You provide information on incidents that occurred in the following article: ' + article_content},         {'role': 'system',          'content': 'The...",
            "twitter:image": "https://global.discourse-cdn.com/openai1/original/3X/b/3/b32f604c592f9a403d89909a2ac630d941304c08.png",
            "og:ignore_canonical": "true",
            "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover",
            "twitter:description": "Hey all,  I’ve been reading about tools lately and wondering if there would be a major benefit vs. using a specific prompt to get my achieved output, which is what I’m doing now.  My ‘tool’ would basically specify the kind of JSON output I want, which is what I’m doing via the following prompts now:          {'role': 'system',          'content': 'You provide information on incidents that occurred in the following article: ' + article_content},         {'role': 'system',          'content': 'The...",
            "og:article:section": "API",
            "og:url": "https://community.openai.com/t/benefit-of-tool-vs-specific-prompt-instructions/583421",
            "og:article:section:color": "f4ac36"
          }
        ],
        "discussionforumposting": [
          {
            "datemodified": "2024-01-11T23:22:00Z",
            "articlesection": "API",
            "position": "1",
            "text": "Hey all, I’ve been reading about tools lately and wondering if there would be a major benefit vs. using a specific prompt to get my achieved output, which is what I’m doing now. My ‘tool’...",
            "headline": "Benefit of tool vs. specific prompt instructions",
            "url": "https://community.openai.com/t/benefit-of-tool-vs-specific-prompt-instructions/583421",
            "datepublished": "2024-01-11T23:22:00Z",
            "mainentityofpage": "https://community.openai.com/t/benefit-of-tool-vs-specific-prompt-instructions/583421"
          }
        ],
        "itemlist": [
          {
            "itemlistorder": "http://schema.org/ItemListOrderDescending"
          }
        ],
        "cse_image": [
          {
            "src": "https://global.discourse-cdn.com/openai1/original/3X/b/3/b32f604c592f9a403d89909a2ac630d941304c08.png"
          }
        ],
        "sitenavigationelement": [
          {
            "name": "Home",
            "url": "Home"
          },
          {
            "name": "Categories",
            "url": "Categories"
          },
          {
            "name": "FAQ/Guidelines",
            "url": "FAQ/Guidelines"
          },
          {
            "name": "Terms of Service",
            "url": "Terms of Service"
          },
          {
            "name": "Privacy Policy",
            "url": "Privacy Policy"
          }
        ],
        "listitem": [
          {
            "item": "API",
            "name": "API",
            "position": "1"
          },
          {
            "position": "1",
            "url": "Adding prompt info to fine-tuning"
          },
          {
            "position": "2",
            "url": "Prompt integrating JSON, or JSON request after the prompt"
          },
          {
            "position": "3",
            "url": "Best approach for JSON generation"
          },
          {
            "position": "4",
            "url": "Fine-tuning dataset : system, user and assistant content : where to put the real instructions?"
          },
          {
            "position": "5",
            "url": "For Assistants, should small data be added as tool response or in instructions?"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "In a plotly dash app, how to show a default text value in a div upon ...",
      "htmlTitle": "In a plotly dash app, how to show a default text value in a div upon ...",
      "link": "https://community.plotly.com/t/in-a-plotly-dash-app-how-to-show-a-default-text-value-in-a-div-upon-each-click-on-a-dropdown-or-button-etc-until-the-div-is-populated/14588",
      "displayLink": "community.plotly.com",
      "snippet": "Oct 16, 2018 ... I am making a dash app where there's a dropdown. Depending on the value selected in the dropdown, I do some calculations in the backend and ...",
      "htmlSnippet": "Oct 16, 2018 \u003cb\u003e...\u003c/b\u003e I am making a dash app where there&#39;s a dropdown. Depending on the value selected in the dropdown, I do some calculations in the backend and&nbsp;...",
      "cacheId": "P_1hVmZEVr8J",
      "formattedUrl": "https://community.plotly.com/t/in-a-plotly...a.../14588",
      "htmlFormattedUrl": "https://community.plotly.com/t/in-a-plotly...a.../14588",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSg4coU3uHpDeCP5NgunterhwmJ2gg4D9sszpey7U7OxaJsrEXpBhfEzSKQ",
            "width": "311",
            "height": "162"
          }
        ],
        "imageobject": [
          {
            "url": "https://global.discourse-cdn.com/business7/uploads/plot/original/3X/2/5/25cce3c59b59258b5cc72421afe3728e8dbcd245.png"
          }
        ],
        "person": [
          {
            "name": "kristada619",
            "url": "kristada619"
          },
          {
            "name": "chriddyp",
            "url": "chriddyp"
          },
          {
            "name": "caiyij",
            "url": "caiyij"
          },
          {
            "name": "chriddyp",
            "url": "chriddyp"
          },
          {
            "name": "caiyij",
            "url": "caiyij"
          },
          {
            "name": "chriddyp",
            "url": "chriddyp"
          },
          {
            "name": "kristada619",
            "url": "kristada619"
          },
          {
            "name": "chriddyp",
            "url": "chriddyp"
          },
          {
            "name": "oege",
            "url": "oege"
          },
          {
            "name": "caiyij",
            "url": "caiyij"
          },
          {
            "name": "Abeserra",
            "url": "Abeserra"
          },
          {
            "name": "dadv92",
            "url": "dadv92"
          },
          {
            "name": "chrisc",
            "url": "chrisc"
          },
          {
            "name": "caiyij",
            "url": "caiyij"
          },
          {
            "name": "chrisc",
            "url": "chrisc"
          },
          {
            "name": "caiyij",
            "url": "caiyij"
          },
          {
            "name": "chrisc",
            "url": "chrisc"
          },
          {
            "name": "chrisc",
            "url": "chrisc"
          },
          {
            "name": "cottrell",
            "url": "cottrell"
          },
          {
            "name": "fsdevniraj",
            "url": "fsdevniraj"
          }
        ],
        "organization": [
          {
            "name": "Plotly"
          }
        ],
        "interactioncounter": [
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "6",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          }
        ],
        "metatags": [
          {
            "og:image": "https://global.discourse-cdn.com/business7/uploads/plot/original/3X/e/d/edee92f62a7850759331e74e8f18bd2f7e9c26f2.jpeg",
            "theme-color": "#ffffff",
            "og:type": "website",
            "twitter:card": "summary_large_image",
            "twitter:title": "In a plotly dash app, how to show a default text value in a div upon each click (on a dropdown, or button, etc) until the div is populated?",
            "article:published_time": "2018-10-16T07:42:22+00:00",
            "og:site_name": "Plotly Community Forum",
            "twitter:url": "https://community.plotly.com/t/in-a-plotly-dash-app-how-to-show-a-default-text-value-in-a-div-upon-each-click-on-a-dropdown-or-button-etc-until-the-div-is-populated/14588",
            "og:title": "In a plotly dash app, how to show a default text value in a div upon each click (on a dropdown, or button, etc) until the div is populated?",
            "og:description": "I am making a dash app where there’s a dropdown. Depending on the value selected in the dropdown, I do some calculations in the backend and display a figure.  import dash from dash.dependencies import Output, Event, Input import dash_core_components as dcc import dash_html_components as html  app.layout = html.Div([     dcc.Dropdown(         id='dataset-dropdown',         options=[             {'label': 'Option A', 'value': 'A'},             {'label': 'Option B', 'value': 'B'},             {'lab...",
            "twitter:image": "https://global.discourse-cdn.com/business7/uploads/plot/original/3X/e/d/edee92f62a7850759331e74e8f18bd2f7e9c26f2.jpeg",
            "og:ignore_canonical": "true",
            "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover",
            "twitter:description": "I am making a dash app where there’s a dropdown. Depending on the value selected in the dropdown, I do some calculations in the backend and display a figure.  import dash from dash.dependencies import Output, Event, Input import dash_core_components as dcc import dash_html_components as html  app.layout = html.Div([     dcc.Dropdown(         id='dataset-dropdown',         options=[             {'label': 'Option A', 'value': 'A'},             {'label': 'Option B', 'value': 'B'},             {'lab...",
            "og:article:section": "Dash Python",
            "og:url": "https://community.plotly.com/t/in-a-plotly-dash-app-how-to-show-a-default-text-value-in-a-div-upon-each-click-on-a-dropdown-or-button-etc-until-the-div-is-populated/14588",
            "og:article:section:color": "0E76BD"
          }
        ],
        "discussionforumposting": [
          {
            "datemodified": "2021-09-12T21:14:57Z",
            "articlesection": "Dash Python",
            "position": "1",
            "text": "I am making a dash app where there’s a dropdown. Depending on the value selected in the dropdown, I do some calculations in the backend and display a figure. import dash from dash.dependencies...",
            "headline": "In a plotly dash app, how to show a default text value in a div upon each click (on a dropdown, or button, etc) until the div is populated?",
            "url": "https://community.plotly.com/t/in-a-plotly-dash-app-how-to-show-a-default-text-value-in-a-div-upon-each-click-on-a-dropdown-or-button-etc-until-the-div-is-populated/14588",
            "datepublished": "2018-10-16T07:42:22Z",
            "mainentityofpage": "https://community.plotly.com/t/in-a-plotly-dash-app-how-to-show-a-default-text-value-in-a-div-upon-each-click-on-a-dropdown-or-button-etc-until-the-div-is-populated/14588"
          }
        ],
        "comment": [
          {
            "datemodified": "2018-10-16T15:38:53Z",
            "position": "2",
            "text": "kristada619: So, what I want is, every time a value is clicked on the dropdown menu, it should show something like “Calculating…” or “Loading…” for those 5-10 seconds until the...",
            "datepublished": "2018-10-16T15:38:53Z"
          },
          {
            "datemodified": "2018-10-16T21:20:13Z",
            "position": "3",
            "text": "I think I found a really simple solution. First add a div in app.layout, for example html.Div(id='load') Then add a function like this: @app.callback(Output('load', 'children'), [Input('dataset-dro...",
            "datepublished": "2018-10-16T21:20:13Z"
          },
          {
            "datemodified": "2018-10-16T22:49:23Z",
            "position": "4",
            "text": "Oh interesting, so input loading div (which also contains the computed data as a hidden store?) output control? Could you share a full, complete example? To simulate an expensive computation,...",
            "datepublished": "2018-10-16T22:49:23Z"
          },
          {
            "image": "https://global.discourse-cdn.com/business7/uploads/plot/original/2X/d/dc1645304d0378c86eb1b82195a5126623e5731f.gif",
            "datemodified": "2018-10-17T15:54:02Z",
            "position": "5",
            "text": "eGrxR7IhLY.gif1206×730 34.5 KB from dash.dependencies import Input, Output import dash import dash_core_components as dcc import dash_html_components as html import time app = dash.Dash()...",
            "datepublished": "2018-10-17T14:05:06Z"
          },
          {
            "datemodified": "2018-10-17T17:09:18Z",
            "position": "6",
            "text": "Very clever! Thank you very much for sharing. One interesting thing about this is that you need the html.Div(id='output') inside the app.layout. This is sort of a limitation with Dash where...",
            "datepublished": "2018-10-17T17:09:18Z"
          },
          {
            "datemodified": "2018-10-18T01:20:20Z",
            "position": "7",
            "text": "Thanks a lot @caiyij for that solution. It was exactly what I was looking for.",
            "datepublished": "2018-10-18T01:20:20Z"
          },
          {
            "datemodified": "2018-10-18T01:46:26Z",
            "position": "8",
            "text": "A post was split to a new topic: Mpl_to_plotly limitations",
            "datepublished": "2018-10-18T01:46:26Z"
          },
          {
            "datemodified": "2018-10-18T10:00:46Z",
            "position": "9",
            "text": "I’m trying to get this to work with storing data in a hidden Div, but seems that the “Loaded!” text immediately gets overwritten with “Loading…” again. Anybody have an idea why?...",
            "datepublished": "2018-10-18T10:00:46Z"
          },
          {
            "datemodified": "2018-10-18T14:43:32Z",
            "position": "10",
            "text": "In my code I was using return html.Div([dcc.Markdown( '''Loading ...''')], id='output') Not return html.Div([dcc.Markdown('''Loading ...''')]) which is in your code.",
            "datepublished": "2018-10-18T14:43:32Z"
          },
          {
            "datemodified": "2018-10-21T06:44:03Z",
            "position": "11",
            "text": "But this behaviour can be bypassed with app.config[‘suppress_callback_exceptions’]=True, can’t it?",
            "datepublished": "2018-10-21T06:44:03Z"
          },
          {
            "datemodified": "2018-11-26T11:00:36Z",
            "position": "12",
            "text": "Nice! thank you for sharing. This is clever indeed",
            "datepublished": "2018-11-26T11:00:36Z"
          },
          {
            "datemodified": "2019-01-18T18:53:16Z",
            "position": "13",
            "text": "I’m finding odd behavior in your example code (which is awesome) - it seems a the second prepare_data routine is called twice for each select from the drop down list. It doesn’t made sense...",
            "datepublished": "2019-01-18T18:53:16Z"
          },
          {
            "datemodified": "2019-01-18T19:16:29Z",
            "position": "14",
            "text": "Of course, it’s a workaround solution since dash doesn’t support multiple callbacks to one output…",
            "datepublished": "2019-01-18T19:16:29Z"
          },
          {
            "datemodified": "2019-01-18T20:22:48Z",
            "position": "15",
            "text": "I did find an interesting work around - have a look at the code below - inspired by your code from dash.dependencies import Input, Output, State import dash import dash_core_components as dcc...",
            "datepublished": "2019-01-18T19:55:46Z"
          },
          {
            "datemodified": "2019-01-18T20:27:28Z",
            "position": "17",
            "text": "I don’t think your code work. Have you seen my example? It should show loading and then the output for every input. But yours only work for first selection, and when selecting another dropdown...",
            "datepublished": "2019-01-18T20:27:28Z"
          },
          {
            "datemodified": "2019-01-18T20:35:50Z",
            "position": "18",
            "text": "Strange since it works for me. I’m worried about my set up. Using your code I get the following an animal is selected Call to first prepare_data Call to second prepare_data Call to first...",
            "datepublished": "2019-01-18T20:35:50Z"
          },
          {
            "datemodified": "2019-01-18T20:37:25Z",
            "position": "19",
            "text": "I only looked at the first selection … you are of course absolutely correct.",
            "datepublished": "2019-01-18T20:37:25Z"
          },
          {
            "datemodified": "2020-05-28T20:17:24Z",
            "position": "20",
            "text": "How to just get a text label that always shows?",
            "datepublished": "2020-05-28T20:17:24Z"
          },
          {
            "datemodified": "2020-08-12T06:16:13Z",
            "position": "21",
            "text": "Hi @kristada619, Make above solution as accepted answer , so new visitors know this thread has a solution.",
            "datepublished": "2020-08-12T06:16:13Z"
          }
        ],
        "cse_image": [
          {
            "src": "https://global.discourse-cdn.com/business7/uploads/plot/original/3X/e/d/edee92f62a7850759331e74e8f18bd2f7e9c26f2.jpeg"
          }
        ],
        "sitenavigationelement": [
          {
            "name": "Home",
            "url": "Home"
          },
          {
            "name": "Categories",
            "url": "Categories"
          },
          {
            "name": "FAQ/Guidelines",
            "url": "FAQ/Guidelines"
          },
          {
            "name": "Terms of Service",
            "url": "Terms of Service"
          },
          {
            "name": "Privacy Policy",
            "url": "Privacy Policy"
          }
        ],
        "listitem": [
          {
            "item": "Dash Python",
            "name": "Dash Python",
            "position": "1"
          },
          {
            "position": "2",
            "url": "Dash table that clears on callback"
          },
          {
            "position": "3",
            "url": "How to update a html content after a calculation function is done?"
          },
          {
            "position": "4",
            "url": ":mega: Dash Loading States"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "javascript - Filter with 'or' in lodash shorthand expression - Stack ...",
      "htmlTitle": "javascript - Filter with &#39;or&#39; in lodash shorthand expression - Stack ...",
      "link": "https://stackoverflow.com/questions/37391019/filter-with-or-in-lodash-shorthand-expression",
      "displayLink": "stackoverflow.com",
      "snippet": "May 23, 2016 ... You can use the _.filter with a function to make it more functional, but simple .filter will also suffice: ES5: collection.filter(function ...",
      "htmlSnippet": "May 23, 2016 \u003cb\u003e...\u003c/b\u003e You can use the _.filter with a function to make it more functional, but simple .filter will also suffice: ES5: collection.filter(function&nbsp;...",
      "cacheId": "pONiRr7nzlUJ",
      "formattedUrl": "https://stackoverflow.com/.../filter-with-or-in-lodash-shorthand-expression",
      "htmlFormattedUrl": "https://stackoverflow.com/.../filter-with-or-in-lodash-shorthand-expression",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQYl7zuT3cw_BBRAyhdQEbQuBgqdNHXKHIYKL8S8ly8x9L_XA9sdwSmiHs",
            "width": "225",
            "height": "225"
          }
        ],
        "qapage": [
          {
            "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "primaryimageofpage": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "name": "Filter with 'or' in lodash shorthand expression",
            "description": "Assuming I have a collection: var collection = [{type: 'a'}, {type: 'b'}, {type: 'c'}, {type: 'd'}] How can I filter it so only types 'a' and 'b' will remain? I would expect to do something like:"
          }
        ],
        "question": [
          {
            "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a",
            "upvotecount": "1",
            "commentcount": "5",
            "answercount": "3",
            "name": "Filter with 'or' in lodash shorthand expression",
            "datecreated": "2016-05-23T12:27:08",
            "text": "Assuming I have a collection: var collection = [{type: 'a'}, {type: 'b'}, {type: 'c'}, {type: 'd'}] How can I filter it so only types 'a' and 'b' will remain? I would expect to do something...",
            "url": "Share"
          }
        ],
        "answer": [
          {
            "upvotecount": "3",
            "commentcount": "3",
            "text": "You can use the _.filter with a function to make it more functional, but simple .filter will also suffice: ES5: collection.filter(function (i) { return i.type === 'a' || i.type === 'b'; });...",
            "datecreated": "2016-05-23T12:53:38",
            "url": "Share"
          },
          {
            "upvotecount": "2",
            "commentcount": "3",
            "text": "Great, to put ryeballar's suggestion into an answer: Assuming I have a: var collection = [{type: 'a'}, {type: 'b'}, {type: 'c'}, {type: 'd'}] Below will filter out only 'a' and 'b' types: _.filter(...",
            "datecreated": "2016-05-23T13:31:46",
            "url": "Share"
          },
          {
            "upvotecount": "1",
            "text": "collection.filter(i =\u003e ['a', 'b'].includes(i.type));",
            "datecreated": "2017-08-07T23:48:42",
            "url": "Share"
          }
        ],
        "person": [
          {
            "name": "wap300"
          },
          {
            "name": "Aditya Singh"
          },
          {
            "name": "wap300"
          },
          {
            "name": "JRansom"
          }
        ],
        "metatags": [
          {
            "og:image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "Filter with 'or' in lodash shorthand expression",
            "og:site_name": "Stack Overflow",
            "twitter:domain": "stackoverflow.com",
            "viewport": "width=device-width, height=device-height, initial-scale=1.0, minimum-scale=1.0",
            "twitter:description": "Assuming I have a collection:\n\nvar collection = [{type: 'a'}, {type: 'b'}, {type: 'c'}, {type: 'd'}]\n\nHow can I filter it so only types 'a' and 'b' will remain? I would expect to do something like:",
            "og:url": "https://stackoverflow.com/questions/37391019/filter-with-or-in-lodash-shorthand-expression"
          }
        ],
        "cse_image": [
          {
            "src": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Nested association, conditional preload - Questions / Help - Elixir ...",
      "htmlTitle": "Nested association, conditional preload - Questions / Help - Elixir ...",
      "link": "https://elixirforum.com/t/nested-association-conditional-preload/33063",
      "displayLink": "elixirforum.com",
      "snippet": "Jul 13, 2020 ... ... a'}, %D{c_id:1, special_col: 'b'}, %D{c_id:1, special_col: 'c'} ] } }. where the extra d entries are the ones that belong to the other b 's ...",
      "htmlSnippet": "Jul 13, 2020 \u003cb\u003e...\u003c/b\u003e ... \u003cb\u003ea&#39;}\u003c/b\u003e, %D{c_id:1, special_col: &#39;b\u003cb\u003e&#39;}\u003c/b\u003e, %D{c_id:1, special_col: &#39;c\u003cb\u003e&#39;}\u003c/b\u003e ] } }. where the extra d entries are the ones that belong to the other b &#39;s&nbsp;...",
      "cacheId": "Oc7LlDLI3Y8J",
      "formattedUrl": "https://elixirforum.com/t/nested-association-conditional-preload/33063",
      "htmlFormattedUrl": "https://elixirforum.com/t/nested-association-conditional-preload/33063",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTj6iGbRCXEIXyWR4aLVxZ2PVr4R3Q-g6cSmq2dYChJoD9GJKevnMGcR6Q",
            "width": "225",
            "height": "225"
          }
        ],
        "imageobject": [
          {
            "url": "https://elixirforum.com/uploads/default/original/2X/6/69cdf106f7ad3749056956ca28dc41e6b9b6a145.png"
          }
        ],
        "person": [
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "baldwindavid",
            "url": "baldwindavid"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "baldwindavid",
            "url": "baldwindavid"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "baldwindavid",
            "url": "baldwindavid"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "Bumppoman",
            "url": "Bumppoman"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "baldwindavid",
            "url": "baldwindavid"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          },
          {
            "name": "baldwindavid",
            "url": "baldwindavid"
          },
          {
            "name": "baldwindavid",
            "url": "baldwindavid"
          },
          {
            "name": "joey_the_snake",
            "url": "joey_the_snake"
          }
        ],
        "organization": [
          {
            "name": "Elixir Programming Language Forum"
          }
        ],
        "interactioncounter": [
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/CommentAction"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "http://schema.org/LikeAction"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "http://schema.org/CommentAction"
          }
        ],
        "metatags": [
          {
            "og:image": "https://elixirforum.com/uploads/default/original/2X/3/301658d2571b34804e642eb7a28976609422ac3b.png",
            "theme-color": "#EDEBED",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "Nested association, conditional preload",
            "article:published_time": "2020-07-13T15:55:16+00:00",
            "og:site_name": "Elixir Programming Language Forum",
            "twitter:url": "https://elixirforum.com/t/nested-association-conditional-preload/33063",
            "og:title": "Nested association, conditional preload",
            "og:description": "I have 4 schemas: A, B, C, D. These are nested within each other in the following way:    A has many B   B has one C   C has many D   For each A, I want the following preload conditions:   preload all B's belonging to  A  preload the C that belongs to each B  preload only one of the D's that belong to each C, and have this filter based on the value of a field in B   My data is very large and I’d like to do this in separate preload queries as opposed to a single join. My main difficulty is refere...",
            "twitter:image": "https://elixirforum.com/uploads/default/original/2X/3/301658d2571b34804e642eb7a28976609422ac3b.png",
            "og:article:tag": "ecto",
            "og:ignore_canonical": "true",
            "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover",
            "twitter:description": "I have 4 schemas: A, B, C, D. These are nested within each other in the following way:    A has many B   B has one C   C has many D   For each A, I want the following preload conditions:   preload all B's belonging to  A  preload the C that belongs to each B  preload only one of the D's that belong to each C, and have this filter based on the value of a field in B   My data is very large and I’d like to do this in separate preload queries as opposed to a single join. My main difficulty is refere...",
            "og:article:section": "Questions / Help",
            "og:url": "https://elixirforum.com/t/nested-association-conditional-preload/33063",
            "og:article:section:color": "AD26DA"
          }
        ],
        "discussionforumposting": [
          {
            "articlebody": "I have 4 schemas: A, B, C, D. These are nested within each other in the following way: A has many B B has one C C has many D For each A, I want the following preload conditions: preload all...",
            "keywords": "ecto",
            "datemodified": "2020-07-13T15:55:16Z",
            "articlesection": "Questions / Help",
            "position": "1",
            "headline": "Nested association, conditional preload",
            "datepublished": "2020-07-13T15:55:16Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          }
        ],
        "comment": [
          {
            "datemodified": "2020-07-13T16:53:35Z",
            "position": "2",
            "text": "You can reference B inside the preload from D using a preload query but, short of denormalizing your data, I’m not sure how it could be done without a join between at least B, C, and D.",
            "datepublished": "2020-07-13T16:53:35Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-13T16:56:08Z",
            "position": "3",
            "text": "Thanks, I think you’re right that I have to join B, C and D and then preload that into A.",
            "datepublished": "2020-07-13T16:56:08Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-14T19:59:36Z",
            "position": "4",
            "text": "@baldwindavid I’m running into some unexpected behaviour. I wonder if you can spot something I’m doing wrong. Here is my query: preload_query = from(b in B, left_join: c in C, on: b.c_id...",
            "datepublished": "2020-07-14T19:42:00Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-14T19:46:00Z",
            "position": "5",
            "text": "One thing that jumps out at me is the single = for special_col.",
            "datepublished": "2020-07-14T19:46:00Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-14T20:03:08Z",
            "position": "6",
            "text": "Sorry that was a typo. I also gave more examples that hopefully make the situation clearer.",
            "datepublished": "2020-07-14T19:46:39Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-14T21:04:55Z",
            "position": "7",
            "text": "joey_the_snake: B has one C One thing to note is that your query suggests that C has one B rather than the other way around. If C belongs to B it should have the foreign key.",
            "datepublished": "2020-07-14T21:04:55Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-14T22:35:18Z",
            "position": "8",
            "text": "Thanks. I made a mistake in my original post. It should be: A has many B B belongs to C C has many D",
            "datepublished": "2020-07-14T22:35:18Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-15T01:18:18Z",
            "position": "9",
            "text": "Can you post an example of the SQL the code produces? That can often pinpoint where the Ecto DSL is going wrong.",
            "datepublished": "2020-07-15T01:18:18Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-15T02:01:40Z",
            "position": "10",
            "text": "Thanks. Here is the preload query’s sql. When I put this into postgres manually, the output looks good to me. SELECT b0.\"id\", b0.\"c_id\", b0.\"special_col\", c1.\"id\", d2.\"id\", d2.\"c_id\", d2.\"special...",
            "datepublished": "2020-07-15T01:59:42Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-15T02:07:53Z",
            "position": "11",
            "text": "Are your actual tables and schemas named A, B, C, D? My brain is having a hard time making sense of these abstract names.",
            "datepublished": "2020-07-15T02:07:53Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-15T05:57:01Z",
            "position": "12",
            "text": "How about this: State has many Students Student belongs to College College has many Courses Let’s say hypothetically that each Student can only enroll in one Course Now my Ecto query is:...",
            "datepublished": "2020-07-15T03:41:13Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-15T15:40:23Z",
            "position": "13",
            "text": "There is probably a simple answer to why that is happening, but I’m not sure what/why Ecto is doing it. Maybe someone here can explain that. Regardless, I suspect you might be able to replace...",
            "datepublished": "2020-07-15T15:40:23Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-16T19:04:10Z",
            "position": "14",
            "text": "@joey_the_snake Did select get you the data you need? To be clear, I was saying to replace the preload attribute with select as in: preload_query = from(student in Student, left_join: college...",
            "datepublished": "2020-07-16T19:04:10Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          },
          {
            "datemodified": "2020-07-16T20:31:05Z",
            "position": "15",
            "text": "baldwindavid: select: %{ student: student.name, college: college.name, course: course.name } Sorry for the late reply, I didn’t get a chance to try it out until now. This new way you mentioned...",
            "datepublished": "2020-07-16T20:31:05Z",
            "mainentityofpage": "https://elixirforum.com/t/nested-association-conditional-preload/33063"
          }
        ],
        "cse_image": [
          {
            "src": "https://elixirforum.com/uploads/default/original/2X/3/301658d2571b34804e642eb7a28976609422ac3b.png"
          }
        ],
        "sitenavigationelement": [
          {
            "name": "Home",
            "url": "Home"
          },
          {
            "name": "Categories",
            "url": "Categories"
          },
          {
            "name": "FAQ/Guidelines",
            "url": "FAQ/Guidelines"
          },
          {
            "name": "Terms of Service",
            "url": "Terms of Service"
          },
          {
            "name": "Privacy Policy",
            "url": "Privacy Policy"
          }
        ],
        "listitem": [
          {
            "item": "Questions / Help",
            "name": "Questions / Help",
            "position": "1"
          },
          {
            "position": "1",
            "url": "Nested preload with condition"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "gdb: how to view all memory associated with struct in hex - Stack ...",
      "htmlTitle": "gdb: how to view all memory associated with struct in hex - Stack ...",
      "link": "https://stackoverflow.com/questions/40540804/gdb-how-to-view-all-memory-associated-with-struct-in-hex",
      "displayLink": "stackoverflow.com",
      "snippet": "Nov 11, 2016 ... I have a pointer to a struct and I can print it in gdb using print /x (*s) . However this gives me: ..., intensity = 2 '\\002'}, {distance_2cm = ...",
      "htmlSnippet": "Nov 11, 2016 \u003cb\u003e...\u003c/b\u003e I have a pointer to a struct and I can print it in gdb using print /x (*s) . However this gives me: ..., intensity = 2 &#39;\\002\u003cb\u003e&#39;}\u003c/b\u003e, {distance_2cm =&nbsp;...",
      "cacheId": "tOnI79o2pmEJ",
      "formattedUrl": "https://stackoverflow.com/.../gdb-how-to-view-all-memory-associated-with-...",
      "htmlFormattedUrl": "https://stackoverflow.com/.../gdb-how-to-view-all-memory-associated-with-...",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQYl7zuT3cw_BBRAyhdQEbQuBgqdNHXKHIYKL8S8ly8x9L_XA9sdwSmiHs",
            "width": "225",
            "height": "225"
          }
        ],
        "qapage": [
          {
            "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "primaryimageofpage": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "name": "gdb: how to view all memory associated with struct in hex",
            "description": "I have a pointer to a struct and I can print it in gdb using print /x (*s). However this gives me: ..., intensity = 2 '\\002'}, {distance_2cm = 3045, intensity = 3 '\\003'}, {distance_2cm = 14735,"
          }
        ],
        "question": [
          {
            "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a",
            "upvotecount": "1",
            "answercount": "1",
            "name": "gdb: how to view all memory associated with struct in hex",
            "datecreated": "2016-11-11T03:46:47",
            "text": "I have a pointer to a struct and I can print it in gdb using print /x (*s). However this gives me: ..., intensity = 2 '\\002'}, {distance_2cm = 3045, intensity = 3 '\\003'}, {distance_2cm = 14735,...",
            "url": "Share"
          }
        ],
        "answer": [
          {
            "upvotecount": "7",
            "commentcount": "1",
            "text": "This can be done with the x command. The simplest way is to first find the size of your structure, and then pass this as an argument to x. Something like: (gdb) print sizeof(whatever) $1 =...",
            "datecreated": "2016-11-11T04:05:53",
            "url": "Share"
          }
        ],
        "person": [
          {
            "name": "Matthew Hoggan"
          },
          {
            "name": "Tom Tromey"
          }
        ],
        "metatags": [
          {
            "og:image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "gdb: how to view all memory associated with struct in hex",
            "og:site_name": "Stack Overflow",
            "twitter:domain": "stackoverflow.com",
            "viewport": "width=device-width, height=device-height, initial-scale=1.0, minimum-scale=1.0",
            "twitter:description": "I have a pointer to a struct and I can print it in gdb using print /x (*s).\n\nHowever this gives me:\r\n  ..., intensity = 2 '\\002'}, {distance_2cm = 3045, intensity = 3 '\\003'}, {distance_2cm = 14735,",
            "og:url": "https://stackoverflow.com/questions/40540804/gdb-how-to-view-all-memory-associated-with-struct-in-hex"
          }
        ],
        "cse_image": [
          {
            "src": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"
          }
        ]
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/customsearch/v1?key=AIzaSyBSyML5OLEjFovkDbY7d4rBF5rJ7DLtDqI&cx=f213d44e1ec82403c&q=a%27}"},"revalidate":31536000,"tags":[]}