{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","cache-control":"private","content-encoding":"gzip","content-type":"application/json; charset=UTF-8","date":"Mon, 11 Mar 2024 17:07:46 GMT","server":"ESF","transfer-encoding":"chunked","vary":"Origin, X-Origin, Referer","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{
  "kind": "customsearch#search",
  "url": {
    "type": "application/json",
    "template": "https://www.googleapis.com/customsearch/v1?q={searchTerms}&num={count?}&start={startIndex?}&lr={language?}&safe={safe?}&cx={cx?}&sort={sort?}&filter={filter?}&gl={gl?}&cr={cr?}&googlehost={googleHost?}&c2coff={disableCnTwTranslation?}&hq={hq?}&hl={hl?}&siteSearch={siteSearch?}&siteSearchFilter={siteSearchFilter?}&exactTerms={exactTerms?}&excludeTerms={excludeTerms?}&linkSite={linkSite?}&orTerms={orTerms?}&dateRestrict={dateRestrict?}&lowRange={lowRange?}&highRange={highRange?}&searchType={searchType}&fileType={fileType?}&rights={rights?}&imgSize={imgSize?}&imgType={imgType?}&imgColorType={imgColorType?}&imgDominantColor={imgDominantColor?}&alt=json"
  },
  "queries": {
    "request": [
      {
        "title": "Google Custom Search - jg'}",
        "totalResults": "1740000000",
        "searchTerms": "jg'}",
        "count": 10,
        "startIndex": 1,
        "inputEncoding": "utf8",
        "outputEncoding": "utf8",
        "safe": "off",
        "cx": "f213d44e1ec82403c"
      }
    ],
    "nextPage": [
      {
        "title": "Google Custom Search - jg'}",
        "totalResults": "1740000000",
        "searchTerms": "jg'}",
        "count": 10,
        "startIndex": 11,
        "inputEncoding": "utf8",
        "outputEncoding": "utf8",
        "safe": "off",
        "cx": "f213d44e1ec82403c"
      }
    ]
  },
  "context": {
    "title": "gonext"
  },
  "searchInformation": {
    "searchTime": 0.491838,
    "formattedSearchTime": "0.49",
    "totalResults": "1740000000",
    "formattedTotalResults": "1,740,000,000"
  },
  "items": [
    {
      "kind": "customsearch#result",
      "title": "jg (@jacquesgreene) / X",
      "htmlTitle": "\u003cb\u003ejg\u003c/b\u003e (@jacquesgreene) / X",
      "link": "https://twitter.com/jacquesgreene?lang=en",
      "displayLink": "twitter.com",
      "snippet": "dance music from montreal, canada | ❇️ NA/world BGreenwood@wmeagency.com ❇️ EU/UK Naomi@earth-agency.com + daniel@earth-agency.com ...",
      "htmlSnippet": "dance music from montreal, canada | ❇️ NA/world BGreenwood@wmeagency.com ❇️ EU/UK Naomi@earth-agency.com + daniel@earth-agency.com&nbsp;...",
      "cacheId": "mWNxSs6yl1wJ",
      "formattedUrl": "https://twitter.com/jacquesgreene?lang=en",
      "htmlFormattedUrl": "https://twitter.com/jacquesgreene?lang=en",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQx8XGaSfbuh7sXBnCI_54EyHpqDrShkb07yGUkog7uAR8rp_-mDYkg1PT9",
            "width": "200",
            "height": "200"
          }
        ],
        "imageobject": [
          {
            "contenturl": "https://pbs.twimg.com/media/GIVxlI3WIAABUjp.jpg",
            "width": "2731",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIVxlI3WIAABUjp?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GIRhxHYaEAA7VZP.jpg",
            "width": "1536",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIRhxHYaEAA7VZP?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GIRhxHYbsAAvWWo.jpg",
            "width": "1536",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIRhxHYbsAAvWWo?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GIU-tXlbQAAsIpp.jpg",
            "width": "2048",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIU-tXlbQAAsIpp?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GIU-tXra8AAfKQu.jpg",
            "width": "2048",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIU-tXra8AAfKQu?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GIQwIARbUAAfSYq.jpg",
            "width": "1536",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIQwIARbUAAfSYq?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GIJcY1hWsAAfqJ2.jpg",
            "width": "1024",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GIJcY1hWsAAfqJ2?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GHyZao_X0AAvnhn.jpg",
            "width": "1179",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GHyZao_X0AAvnhn?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GHiITVCWwAAppAn.jpg",
            "width": "1920",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GHiITVCWwAAppAn?format=jpg&name=thumb"
          },
          {
            "contenturl": "https://pbs.twimg.com/media/GHiJa4lWEAA0EcS.jpg",
            "width": "541",
            "caption": "Image",
            "thumbnailurl": "https://pbs.twimg.com/media/GHiJa4lWEAA0EcS?format=jpg&name=thumb"
          }
        ],
        "person": [
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "2575675376",
            "givenname": "Milan Records",
            "additionalname": "MilanRecLabel"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "240439135",
            "givenname": "NTS Radio",
            "additionalname": "NTSlive"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "24784151",
            "givenname": "Cadence Weapon",
            "additionalname": "cadenceweapon"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "24784151",
            "givenname": "Cadence Weapon",
            "additionalname": "cadenceweapon"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "52702323",
            "givenname": "4AD",
            "additionalname": "4AD_Official"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "206105134",
            "givenname": "James Blake",
            "additionalname": "jamesblake"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "22529203",
            "givenname": "Paul Blest",
            "additionalname": "pblest"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          },
          {
            "identifier": "14357597",
            "givenname": "Ꭺ Ꮯ Ꭼ Ꮇ Ꮎ",
            "additionalname": "AceM0"
          },
          {
            "identifier": "180461175",
            "givenname": "jg",
            "additionalname": "jacquesgreene"
          }
        ],
        "interactioncounter": [
          {
            "userinteractioncount": "269",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1694363979194253702/likes"
          },
          {
            "userinteractioncount": "36",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1694363979194253702/retweets"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1694363979194253702/retweets/with_comments"
          },
          {
            "userinteractioncount": "5",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1694363979194253702"
          },
          {
            "userinteractioncount": "105",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1766990109851738610/likes"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1766990109851738610/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1766990109851738610/retweets/with_comments"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1766990109851738610"
          },
          {
            "userinteractioncount": "17",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1766642688739414303/likes"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1766642688739414303/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1766642688739414303/retweets/with_comments"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1766642688739414303"
          },
          {
            "userinteractioncount": "28",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1766644466075787682/likes"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1766644466075787682/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1766644466075787682/retweets/with_comments"
          },
          {
            "userinteractioncount": "5",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1766644466075787682"
          },
          {
            "userinteractioncount": "10",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1766887403380515178/likes"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1766887403380515178/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1766887403380515178/retweets/with_comments"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1766887403380515178"
          },
          {
            "userinteractioncount": "407",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/MilanRecLabel/status/1766589872096112663/likes"
          },
          {
            "userinteractioncount": "55",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/MilanRecLabel/status/1766589872096112663/retweets"
          },
          {
            "userinteractioncount": "14",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/MilanRecLabel/status/1766589872096112663/retweets/with_comments"
          },
          {
            "userinteractioncount": "9",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/MilanRecLabel/status/1766589872096112663"
          },
          {
            "userinteractioncount": "71",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1766429701151539408/likes"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1766429701151539408/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1766429701151539408/retweets/with_comments"
          },
          {
            "userinteractioncount": "3",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1766429701151539408"
          },
          {
            "userinteractioncount": "799",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/NTSlive/status/1766075593349627957/likes"
          },
          {
            "userinteractioncount": "103",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/NTSlive/status/1766075593349627957/retweets"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/NTSlive/status/1766075593349627957/retweets/with_comments"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/NTSlive/status/1766075593349627957"
          },
          {
            "userinteractioncount": "128",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1765548830592786754/likes"
          },
          {
            "userinteractioncount": "11",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1765548830592786754/retweets"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1765548830592786754/retweets/with_comments"
          },
          {
            "userinteractioncount": "8",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1765548830592786754"
          },
          {
            "userinteractioncount": "16",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/cadenceweapon/status/1765129810496336303/likes"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/cadenceweapon/status/1765129810496336303/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/cadenceweapon/status/1765129810496336303/retweets/with_comments"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/cadenceweapon/status/1765129810496336303"
          },
          {
            "userinteractioncount": "59",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1765063264403443991/likes"
          },
          {
            "userinteractioncount": "3",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1765063264403443991/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1765063264403443991/retweets/with_comments"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1765063264403443991"
          },
          {
            "userinteractioncount": "21",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/cadenceweapon/status/1765021952895267157/likes"
          },
          {
            "userinteractioncount": "9",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/cadenceweapon/status/1765021952895267157/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/cadenceweapon/status/1765021952895267157/retweets/with_comments"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/cadenceweapon/status/1765021952895267157"
          },
          {
            "userinteractioncount": "873",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1764726055410295145/likes"
          },
          {
            "userinteractioncount": "30",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1764726055410295145/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1764726055410295145/retweets/with_comments"
          },
          {
            "userinteractioncount": "18",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1764726055410295145"
          },
          {
            "userinteractioncount": "1732",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/4AD_Official/status/1764441900205928785/likes"
          },
          {
            "userinteractioncount": "221",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/4AD_Official/status/1764441900205928785/retweets"
          },
          {
            "userinteractioncount": "73",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/4AD_Official/status/1764441900205928785/retweets/with_comments"
          },
          {
            "userinteractioncount": "27",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/4AD_Official/status/1764441900205928785"
          },
          {
            "userinteractioncount": "14716",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jamesblake/status/1764201370121638002/likes"
          },
          {
            "userinteractioncount": "2898",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jamesblake/status/1764201370121638002/retweets"
          },
          {
            "userinteractioncount": "468",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jamesblake/status/1764201370121638002/retweets/with_comments"
          },
          {
            "userinteractioncount": "277",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jamesblake/status/1764201370121638002"
          },
          {
            "userinteractioncount": "22",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1763692688317075545/likes"
          },
          {
            "userinteractioncount": "3",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1763692688317075545/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1763692688317075545/retweets/with_comments"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1763692688317075545"
          },
          {
            "userinteractioncount": "4278",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/pblest/status/1763079326289756405/likes"
          },
          {
            "userinteractioncount": "1158",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/pblest/status/1763079326289756405/retweets"
          },
          {
            "userinteractioncount": "81",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/pblest/status/1763079326289756405/retweets/with_comments"
          },
          {
            "userinteractioncount": "51",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/pblest/status/1763079326289756405"
          },
          {
            "userinteractioncount": "48",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1763309154611933437/likes"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1763309154611933437/retweets"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1763309154611933437/retweets/with_comments"
          },
          {
            "userinteractioncount": "3",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1763309154611933437"
          },
          {
            "userinteractioncount": "5",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1763316068569747882/likes"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1763316068569747882/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1763316068569747882/retweets/with_comments"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1763316068569747882"
          },
          {
            "userinteractioncount": "9",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/AceM0/status/1763310356238123412/likes"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/AceM0/status/1763310356238123412/retweets"
          },
          {
            "userinteractioncount": "1",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/AceM0/status/1763310356238123412/retweets/with_comments"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/AceM0/status/1763310356238123412"
          },
          {
            "userinteractioncount": "51",
            "interactiontype": "https://schema.org/LikeAction",
            "name": "Likes",
            "url": "https://twitter.com/jacquesgreene/status/1763205413560897962/likes"
          },
          {
            "userinteractioncount": "4",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Retweets",
            "url": "https://twitter.com/jacquesgreene/status/1763205413560897962/retweets"
          },
          {
            "userinteractioncount": "0",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Quotes",
            "url": "https://twitter.com/jacquesgreene/status/1763205413560897962/retweets/with_comments"
          },
          {
            "userinteractioncount": "2",
            "interactiontype": "https://schema.org/InteractAction",
            "name": "Replies",
            "url": "https://twitter.com/jacquesgreene/status/1763205413560897962"
          }
        ],
        "metatags": [
          {
            "og:image": "https://pbs.twimg.com/profile_images/1630684124523397123/FitSKZ40_200x200.jpg",
            "theme-color": "#FFFFFF",
            "og:type": "profile",
            "og:site_name": "X (formerly Twitter)",
            "al:ios:app_name": "X",
            "apple-mobile-web-app-title": "Twitter",
            "og:title": "jg (@jacquesgreene) on X",
            "al:android:package": "com.twitter.android",
            "al:ios:url": "twitter://user?screen_name=jacquesgreene",
            "title": "jg (@jacquesgreene) on X",
            "og:description": "dance music from montreal, canada | ❇️ NA/world BGreenwood@wmeagency.com ❇️ EU/UK Naomi@earth-agency.com + daniel@earth-agency.com  | ❇️ mgmt@jacquesgreene.com",
            "al:ios:app_store_id": "333903271",
            "facebook-domain-verification": "x6sdcc8b5ju3bh8nbm59eswogvg6t1",
            "al:android:url": "twitter://user?screen_name=jacquesgreene",
            "fb:app_id": "2231777543",
            "apple-mobile-web-app-status-bar-style": "white",
            "viewport": "width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0,viewport-fit=cover",
            "mobile-web-app-capable": "yes",
            "og:url": "https://twitter.com/jacquesgreene",
            "al:android:app_name": "X"
          }
        ],
        "videoobject": [
          {
            "duration": "PT0H0M24S",
            "embedurl": "https://platform.twitter.com/embed/Tweet.html?dnt=false&embedId=twitter-widget-1&frame=false&hideCard=false&hideThread=false&lang=en&id=1765021952895267157",
            "contenturl": "https://video.twimg.com/ext_tw_video/1764890048107819009/pu/vid/avc1/720x720/AOJRsbSMz4hWQ4kp.mp4?tag=12",
            "uploaddate": "2024-03-05T14:30:00.000Z",
            "name": "@cadenceweapon's video Tweet",
            "description": "Embedded video",
            "caption": "Embedded video",
            "thumbnailurl": "https://pbs.twimg.com/ext_tw_video_thumb/1764890048107819009/pu/img/AfNi83qz1Y06fXsY.jpg"
          },
          {
            "duration": "PT0H0M36S",
            "embedurl": "https://platform.twitter.com/embed/Tweet.html?dnt=false&embedId=twitter-widget-1&frame=false&hideCard=false&hideThread=false&lang=en&id=1764441900205928785",
            "contenturl": "https://video.twimg.com/ext_tw_video/1764441847911391232/pu/vid/avc1/574x322/5zemSVkTDagoKD0j.mp4?tag=12",
            "uploaddate": "2024-03-04T00:05:05.000Z",
            "name": "@4AD_Official's video Tweet",
            "description": "Embedded video",
            "caption": "Embedded video",
            "thumbnailurl": "https://pbs.twimg.com/ext_tw_video_thumb/1764441847911391232/pu/img/-JS206FrMiLFSPl5.jpg"
          }
        ],
        "collection": [
          {
            "name": "Profile posts"
          }
        ],
        "creativework": [
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/9sT5PdJ5WP"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/VpZKsGTpkG"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/dLiA4kvi8p"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/cNPpiyJPkr"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/qTmcOddp9x"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/fARzQywhDz"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/0yd5oC2rCn"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/zSd4gLSyE8"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/X2JOYV8FBb"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/92VTyS7ZOp"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/VJU9AJ5bgj"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/wMQlWMHhYN"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/D8nodhQPoU"
          },
          {
            "name": "Expanded Tweet URLs",
            "url": "https://t.co/7UOdkewYvL"
          }
        ],
        "cse_image": [
          {
            "src": "https://pbs.twimg.com/profile_images/1630684124523397123/FitSKZ40_200x200.jpg"
          }
        ],
        "socialmediaposting": [
          {
            "identifier": "1694363979194253702",
            "commentcount": "5",
            "articlebody": "NOSAJ THING + JACQUES GREENE + OURI / TOO CLOSE / https://l-ky.me/tooclose @nosajthing @LuckyMe",
            "position": "1",
            "datecreated": "2023-08-23T15:00:27.000Z",
            "datepublished": "2023-08-23T15:00:27.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1694363979194253702"
          },
          {
            "identifier": "1766990109851738610",
            "commentcount": "0",
            "articlebody": "yohji hive 🫡",
            "position": "2",
            "datecreated": "2024-03-11T00:50:45.000Z",
            "isbasedon": "https://twitter.com/neonrated/status/1766943514611368180",
            "datepublished": "2024-03-11T00:50:45.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1766990109851738610"
          },
          {
            "identifier": "1766642688739414303",
            "commentcount": "4",
            "articlebody": "in San Diego tonight just hoping to car spot @DougDeMuro",
            "position": "3",
            "datecreated": "2024-03-10T01:50:14.000Z",
            "datepublished": "2024-03-10T01:50:14.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1766642688739414303"
          },
          {
            "identifier": "1766644466075787682",
            "commentcount": "5",
            "articlebody": "good Maserati biturbo spot on the way in",
            "ispartof": "https://twitter.com/jacquesgreene/status/1766642688739414303",
            "position": "4",
            "datecreated": "2024-03-10T01:57:18.000Z",
            "datepublished": "2024-03-10T01:57:18.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1766644466075787682"
          },
          {
            "identifier": "1766887403380515178",
            "commentcount": "0",
            "articlebody": "San Diego car spotting 2",
            "ispartof": "https://twitter.com/jacquesgreene/status/1766644466075787682",
            "position": "5",
            "datecreated": "2024-03-10T18:02:38.000Z",
            "datepublished": "2024-03-10T18:02:38.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1766887403380515178"
          },
          {
            "identifier": "1766608217369415882",
            "position": "6",
            "datecreated": "2024-03-09T23:33:15.000Z",
            "datepublished": "2024-03-09T23:33:15.000Z"
          },
          {
            "identifier": "1766589872096112663",
            "commentcount": "9",
            "articlebody": "Oh oh ! What’s that ?",
            "datecreated": "2024-03-09T22:20:21.000Z",
            "datepublished": "2024-03-09T22:20:21.000Z",
            "url": "https://twitter.com/MilanRecLabel/status/1766589872096112663"
          },
          {
            "identifier": "1766429701151539408",
            "commentcount": "3",
            "articlebody": "keep thinking of when in the Paul Schrader TAFS interview they talk about Mishima and he first says it took courage but quickly corrects himself and says he saw it as ‘problem solving, but...",
            "position": "7",
            "datecreated": "2024-03-09T11:43:54.000Z",
            "datepublished": "2024-03-09T11:43:54.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1766429701151539408"
          },
          {
            "identifier": "1766194381583966681",
            "position": "8",
            "datecreated": "2024-03-08T20:08:49.000Z",
            "datepublished": "2024-03-08T20:08:49.000Z"
          },
          {
            "identifier": "1766075593349627957",
            "commentcount": "0",
            "articlebody": "Toriyama❤️",
            "datecreated": "2024-03-08T12:16:48.000Z",
            "datepublished": "2024-03-08T12:16:48.000Z",
            "url": "https://twitter.com/NTSlive/status/1766075593349627957"
          },
          {
            "identifier": "1765548830592786754",
            "commentcount": "8",
            "articlebody": "paul stretch the world",
            "position": "9",
            "datecreated": "2024-03-07T01:23:38.000Z",
            "datepublished": "2024-03-07T01:23:38.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1765548830592786754"
          },
          {
            "identifier": "1765131240947306908",
            "position": "10",
            "datecreated": "2024-03-05T21:44:17.000Z",
            "datepublished": "2024-03-05T21:44:17.000Z"
          },
          {
            "identifier": "1765129810496336303",
            "commentcount": "0",
            "articlebody": "Cadence Weapon feat. Jacques Greene - Exceptional (Official Music Video)",
            "datecreated": "2024-03-05T21:38:36.000Z",
            "datepublished": "2024-03-05T21:38:36.000Z",
            "url": "https://twitter.com/cadenceweapon/status/1765129810496336303"
          },
          {
            "identifier": "1765063264403443991",
            "commentcount": "4",
            "articlebody": "John Glacier - Emotions",
            "position": "11",
            "datecreated": "2024-03-05T17:14:10.000Z",
            "datepublished": "2024-03-05T17:14:10.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1765063264403443991"
          },
          {
            "identifier": "1765034030146232328",
            "position": "12",
            "datecreated": "2024-03-05T15:18:00.000Z",
            "datepublished": "2024-03-05T15:18:00.000Z"
          },
          {
            "identifier": "1765021952895267157",
            "commentcount": "0",
            "articlebody": "EXCEPTIONAL with @jacquesgreene out now on all platforms!",
            "datecreated": "2024-03-05T14:30:00.000Z",
            "datepublished": "2024-03-05T14:30:00.000Z",
            "url": "https://twitter.com/cadenceweapon/status/1765021952895267157"
          },
          {
            "identifier": "1764726055410295145",
            "commentcount": "18",
            "articlebody": "always been one of my fav press photos / tillmans shots. what are they up to in that garage. is it break of dawn and ongoing sesh? was tillmans just w them and asked him to step out? the \"sorry...",
            "position": "13",
            "datecreated": "2024-03-04T18:54:13.000Z",
            "isbasedon": "https://twitter.com/memeSTlaurent/status/1764453841083219989",
            "datepublished": "2024-03-04T18:54:13.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1764726055410295145"
          },
          {
            "identifier": "1764441997870338539",
            "position": "14",
            "datecreated": "2024-03-04T00:05:28.000Z",
            "datepublished": "2024-03-04T00:05:28.000Z"
          },
          {
            "identifier": "1764441900205928785",
            "commentcount": "27",
            "articlebody": "Ten years of Future Islands on ‘The Late Show with David Letterman’",
            "datecreated": "2024-03-04T00:05:05.000Z",
            "datepublished": "2024-03-04T00:05:05.000Z",
            "url": "https://twitter.com/4AD_Official/status/1764441900205928785"
          },
          {
            "identifier": "1764406923036651800",
            "position": "15",
            "datecreated": "2024-03-03T21:46:06.000Z",
            "datepublished": "2024-03-03T21:46:06.000Z"
          },
          {
            "identifier": "1764201370121638002",
            "commentcount": "277",
            "articlebody": "If we want quality music somebody is gonna have to pay for it. Streaming services don’t pay properly, labels want a bigger cut than ever and just sit and wait for you to go viral, TikTok...",
            "datecreated": "2024-03-03T08:09:18.000Z",
            "datepublished": "2024-03-03T08:09:18.000Z",
            "url": "https://twitter.com/jamesblake/status/1764201370121638002"
          },
          {
            "identifier": "1763692688317075545",
            "commentcount": "2",
            "position": "16",
            "datecreated": "2024-03-01T22:27:59.000Z",
            "datepublished": "2024-03-01T22:27:59.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1763692688317075545"
          },
          {
            "identifier": "1763342951277547575",
            "position": "17",
            "datecreated": "2024-02-29T23:18:15.000Z",
            "datepublished": "2024-02-29T23:18:15.000Z"
          },
          {
            "identifier": "1763079326289756405",
            "commentcount": "51",
            "articlebody": "This is an absolutely damning story. Maybe the biggest failure at the Times since Judith Miller’s WMD coverage",
            "datecreated": "2024-02-29T05:50:42.000Z",
            "datepublished": "2024-02-29T05:50:42.000Z",
            "url": "https://twitter.com/pblest/status/1763079326289756405"
          },
          {
            "identifier": "1763309154611933437",
            "commentcount": "3",
            "articlebody": "woa woa woa ok, SF on saturday @noisepop @jacquesgreene b2b @nosajthing @AceM0 + i mean",
            "position": "18",
            "datecreated": "2024-02-29T21:03:57.000Z",
            "datepublished": "2024-02-29T21:03:57.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1763309154611933437"
          },
          {
            "identifier": "1763316068569747882",
            "commentcount": "1",
            "articlebody": "up up up up up up up up",
            "ispartof": "https://twitter.com/jacquesgreene/status/1763309154611933437",
            "position": "19",
            "datecreated": "2024-02-29T21:31:26.000Z",
            "datepublished": "2024-02-29T21:31:26.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1763316068569747882"
          },
          {
            "identifier": "1763310615454441822",
            "position": "20",
            "datecreated": "2024-02-29T21:09:46.000Z",
            "datepublished": "2024-02-29T21:09:46.000Z"
          },
          {
            "identifier": "1763310356238123412",
            "commentcount": "2",
            "articlebody": "SF on saturday with @jacquesgreene & @nosajthing 🥲❤️\u200d🔥🚀 https://ra.co/events/1851586",
            "ispartof": "https://twitter.com/AceM0/status/1763310343818818009",
            "datecreated": "2024-02-29T21:08:44.000Z",
            "datepublished": "2024-02-29T21:08:44.000Z",
            "url": "https://twitter.com/AceM0/status/1763310356238123412"
          },
          {
            "identifier": "1763205413560897962",
            "commentcount": "2",
            "articlebody": "…",
            "position": "21",
            "datecreated": "2024-02-29T14:11:44.000Z",
            "isbasedon": "https://twitter.com/cnnbrk/status/1763187530474655880",
            "datepublished": "2024-02-29T14:11:44.000Z",
            "url": "https://twitter.com/jacquesgreene/status/1763205413560897962"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Is Qiyana JG worth trying anymore or not atm? : r/QiyanaMains",
      "htmlTitle": "Is Qiyana \u003cb\u003eJG\u003c/b\u003e worth trying anymore or not atm? : r/QiyanaMains",
      "link": "https://www.reddit.com/r/QiyanaMains/comments/16zsgtx/is_qiyana_jg_worth_trying_anymore_or_not_atm/",
      "displayLink": "www.reddit.com",
      "snippet": "Oct 4, 2023 ... TLDR : She clears surprisingly fast. But she lose a lot of HPs. So she is rly weak to any sort of Invade. But she has good gank potential, but ...",
      "htmlSnippet": "Oct 4, 2023 \u003cb\u003e...\u003c/b\u003e TLDR : She clears surprisingly fast. But she lose a lot of HPs. So she is rly weak to any sort of Invade. But she has good gank potential, but&nbsp;...",
      "formattedUrl": "https://www.reddit.com/.../is_qiyana_jg_worth_trying_anymore_or_not_at...",
      "htmlFormattedUrl": "https://www.reddit.com/.../is_qiyana_\u003cb\u003ejg\u003c/b\u003e_worth_trying_anymore_or_not_at...",
      "pagemap": {
        "metatags": [
          {
            "og:image": "https://share.redd.it/preview/post/16zsgtx",
            "theme-color": "#000000",
            "og:image:width": "1200",
            "og:type": "website",
            "og:image:alt": "An image containing a preview of the post",
            "twitter:card": "summary_large_image",
            "twitter:title": "r/QiyanaMains on Reddit: Is Qiyana JG worth trying anymore or not atm?",
            "og:site_name": "Reddit",
            "og:title": "r/QiyanaMains on Reddit: Is Qiyana JG worth trying anymore or not atm?",
            "og:image:height": "630",
            "msapplication-navbutton-color": "#000000",
            "og:description": "Posted by u/RhythmReaper46 - 2 votes and 31 comments",
            "twitter:image": "https://share.redd.it/preview/post/16zsgtx",
            "apple-mobile-web-app-status-bar-style": "black",
            "twitter:site": "@reddit",
            "viewport": "width=device-width, initial-scale=1, viewport-fit=cover",
            "apple-mobile-web-app-capable": "yes",
            "og:ttl": "600",
            "og:url": "https://www.reddit.com/r/QiyanaMains/comments/16zsgtx/is_qiyana_jg_worth_trying_anymore_or_not_atm/"
          }
        ],
        "cse_image": [
          {
            "src": "https://share.redd.it/preview/post/16zsgtx"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Adele J-G (@adelejackson26) • Instagram photos and videos",
      "htmlTitle": "Adele \u003cb\u003eJ-G\u003c/b\u003e (@adelejackson26) • Instagram photos and videos",
      "link": "https://www.instagram.com/adelejackson26/",
      "displayLink": "www.instagram.com",
      "snippet": "6099 Followers, 1909 Following, 1974 Posts - See Instagram photos and videos from Adele J-G (@adelejackson26)",
      "htmlSnippet": "6099 Followers, 1909 Following, 1974 Posts - See Instagram photos and videos from Adele \u003cb\u003eJ-G\u003c/b\u003e (@adelejackson26)",
      "formattedUrl": "https://www.instagram.com/adelejackson26/",
      "htmlFormattedUrl": "https://www.instagram.com/adelejackson26/",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRgyJcVRTOkTGLwv40KlT30z7ZMgFCPJ8qH3Yml-bHHnMjsML4JAr_4ovmD",
            "width": "201",
            "height": "251"
          }
        ],
        "xfn": [
          {}
        ],
        "metatags": [
          {
            "og:image": "https://scontent-dfw5-1.cdninstagram.com/v/t51.2885-19/431739111_715479824088583_3061245745218954391_n.jpg?stp=dst-jpg_s100x100&_nc_cat=110&ccb=1-7&_nc_sid=3fd06f&_nc_ohc=NnbZW9Q4t9EAX_ZVmDZ&_nc_ht=scontent-dfw5-1.cdninstagram.com&oh=00_AfAC7wmPwGRrKqV5gVjkfCwvlD4R8j15wAJY2sq_XAxobQ&oe=65F49890",
            "theme-color": "#FFFFFF",
            "og:type": "profile",
            "al:ios:app_name": "Instagram",
            "og:title": "Adele J-G (@adelejackson26) • Instagram photos and videos",
            "al:android:package": "com.instagram.android",
            "al:ios:url": "instagram://user?username=adelejackson26",
            "color-scheme": "light",
            "og:description": "6,099 Followers, 1,909 Following, 1,974 Posts - See Instagram photos and videos from Adele J-G (@adelejackson26)",
            "al:ios:app_store_id": "389801252",
            "al:android:url": "https://instagram.com/_u/adelejackson26/",
            "apple-mobile-web-app-status-bar-style": "default",
            "viewport": "width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, viewport-fit=cover",
            "mobile-web-app-capable": "yes",
            "og:url": "https://www.instagram.com/adelejackson26/",
            "al:android:app_name": "Instagram"
          }
        ],
        "cse_image": [
          {
            "src": "https://lookaside.instagram.com/seo/google_widget/crawler/?media_id=3171698329771758991"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Stream White Ferrari (JG Edit) by Jacques Greene | Listen online for ...",
      "htmlTitle": "Stream White Ferrari (\u003cb\u003eJG\u003c/b\u003e Edit) by Jacques Greene | Listen online for ...",
      "link": "https://soundcloud.com/jacquesgreene/whiteferrari",
      "displayLink": "soundcloud.com",
      "snippet": "Oct 6, 2016 ... Stream White Ferrari (JG Edit) by Jacques Greene on desktop and mobile. Play over 320 million tracks for free on SoundCloud.",
      "htmlSnippet": "Oct 6, 2016 \u003cb\u003e...\u003c/b\u003e Stream White Ferrari (\u003cb\u003eJG\u003c/b\u003e Edit) by Jacques Greene on desktop and mobile. Play over 320 million tracks for free on SoundCloud.",
      "cacheId": "vIl2W7IOOBUJ",
      "formattedUrl": "https://soundcloud.com/jacquesgreene/whiteferrari",
      "htmlFormattedUrl": "https://soundcloud.com/jacquesgreene/whiteferrari",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSViuVZXRsH1ZojY_7Rl675UXExgGZ4xf8iitRTStgkNjkeqfoWoYOm0Z3C",
            "width": "225",
            "height": "225"
          }
        ],
        "metatags": [
          {
            "twitter:audio:source": "https://api-partners.soundcloud.com/twitter/tracks/soundcloud:sounds:286320233/vmap",
            "twitter:app:id:googleplay": "com.soundcloud.android",
            "og:image": "https://i1.sndcdn.com/artworks-000186981947-6uouz7-t500x500.jpg",
            "twitter:app:url:iphone": "soundcloud://sounds:286320233",
            "theme-color": "#333",
            "og:image:width": "500",
            "twitter:card": "player",
            "og:site_name": "SoundCloud",
            "twitter:url": "https://soundcloud.com/jacquesgreene/whiteferrari",
            "twitter:app:url:ipad": "soundcloud://sounds:286320233",
            "al:android:package": "com.soundcloud.android",
            "twitter:app:name:googleplay": "SoundCloud",
            "medium": "video",
            "twitter:app:id:iphone": "336353151",
            "al:ios:url": "soundcloud://sounds:286320233",
            "og:description": "Stream White Ferrari (JG Edit) by Jacques Greene on desktop and mobile. Play over 320 million tracks for free on SoundCloud.",
            "al:ios:app_store_id": "336353151",
            "twitter:player": "https://w.soundcloud.com/player/?url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F286320233&auto_play=false&show_artwork=true&visual=true&origin=twitter",
            "twitter:player:height": "400",
            "og:video:type": "application/x-shockwave-flash",
            "og:video:height": "98",
            "og:type": "music.song",
            "twitter:title": "White Ferrari (JG Edit)",
            "al:ios:app_name": "SoundCloud",
            "twitter:audio:partner": "SoundCloud",
            "og:title": "White Ferrari (JG Edit)",
            "twitter:app:id:ipad": "336353151",
            "og:image:height": "500",
            "og:video:width": "460",
            "twitter:image:src": "https://i1.sndcdn.com/artworks-000186981947-6uouz7-t500x500.jpg",
            "al:android:url": "soundcloud://sounds:286320233",
            "referrer": "origin",
            "fb:app_id": "19507961798",
            "twitter:app:url:googleplay": "soundcloud://sounds:286320233",
            "twitter:app:name:ipad": "SoundCloud",
            "og:video": "https://w.soundcloud.com/player/?url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F286320233&auto_play=false&show_artwork=true&visual=true&color=3b5998&origin=facebook",
            "viewport": "width=device-width, initial-scale=1.0, viewport-fit=cover, maximum-scale=1",
            "twitter:audio:artist_name": "Jacques Greene",
            "twitter:description": "Stream White Ferrari (JG Edit) by Jacques Greene on desktop and mobile. Play over 320 million tracks for free on SoundCloud.",
            "al:web:should_fallback": "false",
            "og:url": "https://soundcloud.com/jacquesgreene/whiteferrari",
            "twitter:player:width": "435",
            "al:android:app_name": "SoundCloud",
            "twitter:app:name:iphone": "SoundCloud"
          }
        ],
        "cse_image": [
          {
            "src": "https://i1.sndcdn.com/artworks-000186981947-6uouz7-t500x500.jpg"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Justin J. Giangrande (@jg.network) • Instagram photos and videos",
      "htmlTitle": "Justin J. Giangrande (@\u003cb\u003ejg\u003c/b\u003e.network) • Instagram photos and videos",
      "link": "https://www.instagram.com/jg.network/?hl=en",
      "displayLink": "www.instagram.com",
      "snippet": "3975 Followers, 3093 Following, 1309 Posts - See Instagram photos and videos from Justin J. Giangrande (@jg.network)",
      "htmlSnippet": "3975 Followers, 3093 Following, 1309 Posts - See Instagram photos and videos from Justin J. Giangrande (@\u003cb\u003ejg\u003c/b\u003e.network)",
      "formattedUrl": "https://www.instagram.com/jg.network/?hl=en",
      "htmlFormattedUrl": "https://www.instagram.com/\u003cb\u003ejg\u003c/b\u003e.network/?hl=en",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS3808cBZ7ftHddvSPj2VppLIYMUqqhMrIJVXPfn3-Z-q7GRl4aUdB5-V0",
            "width": "160",
            "height": "160"
          }
        ],
        "metatags": [
          {
            "og:image": "https://scontent-lax3-2.cdninstagram.com/v/t51.2885-19/123823278_210022463836290_5058201072455425895_n.jpg?stp=dst-jpg_s100x100&_nc_cat=107&ccb=1-7&_nc_sid=3fd06f&_nc_ohc=yJOmY18fTCAAX-G3feb&_nc_ht=scontent-lax3-2.cdninstagram.com&oh=00_AfCyEv0E0G_-AZ768RDFQgo3X1DAqQEvxZ4dewd1lpN0gg&oe=65F31DA6",
            "theme-color": "#ffffff",
            "og:type": "profile",
            "al:ios:app_name": "Instagram",
            "og:title": "Justin J. Giangrande (@jg.network) • Instagram photos and videos",
            "al:android:package": "com.instagram.android",
            "al:ios:url": "instagram://user?username=jg.network",
            "color-scheme": "light",
            "og:description": "3,975 Followers, 3,093 Following, 1,309 Posts - See Instagram photos and videos from Justin J. Giangrande (@jg.network)",
            "al:ios:app_store_id": "389801252",
            "al:android:url": "https://instagram.com/_u/jg.network/",
            "apple-mobile-web-app-status-bar-style": "default",
            "viewport": "width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, viewport-fit=cover",
            "mobile-web-app-capable": "yes",
            "og:url": "https://www.instagram.com/jg.network/",
            "al:android:app_name": "Instagram"
          }
        ],
        "cse_image": [
          {
            "src": "x-raw-image:///7c26a441e8f1a26613711a8f79913c377cfc63a23a0a8be2c95404df76dd8a06"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "Beverly Hills Rooftop Bar – Waldorf Astoria Rooftop Bar",
      "htmlTitle": "Beverly Hills Rooftop Bar – Waldorf Astoria Rooftop Bar",
      "link": "https://waldorfastoriabeverlyhills.com/dining/the-rooftop-by-jg/",
      "displayLink": "waldorfastoriabeverlyhills.com",
      "snippet": "An impeccably styled garden setting, the Rooftop by JG is among the largest of its kind in Beverly Hills. This one-of-a-kind experience is not to be missed ...",
      "htmlSnippet": "An impeccably styled garden setting, the Rooftop by \u003cb\u003eJG\u003c/b\u003e is among the largest of its kind in Beverly Hills. This one-of-a-kind experience is not to be missed&nbsp;...",
      "cacheId": "7ssocZX3vDYJ",
      "formattedUrl": "https://waldorfastoriabeverlyhills.com/dining/the-rooftop-by-jg/",
      "htmlFormattedUrl": "https://waldorfastoriabeverlyhills.com/dining/the-rooftop-by-\u003cb\u003ejg\u003c/b\u003e/",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTmnCgwwl1gV41FRFOFhg4WN1F329qdPh_-YccQaIkjucp3hSQc_VRjezoK",
            "width": "310",
            "height": "163"
          }
        ],
        "metatags": [
          {
            "og:image": "https://waldorfastoriabeverlyhills.com/wp-content/themes/wa-beverly-hills-full/img/WABH-lobby-image-1200x630.jpg",
            "viewport": "width=device-width, initial-scale=1.0"
          }
        ],
        "cse_image": [
          {
            "src": "https://waldorfastoriabeverlyhills.com/wp-content/themes/wa-beverly-hills-full/img/WABH-lobby-image-1200x630.jpg"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "JG Ranch - Home",
      "htmlTitle": "\u003cb\u003eJG\u003c/b\u003e Ranch - Home",
      "link": "https://jgranch.com/",
      "displayLink": "jgranch.com",
      "snippet": "With a variety of fresh produce, JG Ranch is a one-stop-shop for all your farm-to-table goods! Come check out the family-operated farm in Brooksville today!",
      "htmlSnippet": "With a variety of fresh produce, \u003cb\u003eJG\u003c/b\u003e Ranch is a one-stop-shop for all your farm-to-table goods! Come check out the family-operated farm in Brooksville today!",
      "cacheId": "kmxyoQltFiQJ",
      "formattedUrl": "https://jgranch.com/",
      "htmlFormattedUrl": "https://jgranch.com/",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRYSskoSLeawFnIzwxvgzoc6INHofmgriiYhy1dWveC-TQg9fujxYNIleXA",
            "width": "259",
            "height": "194"
          }
        ],
        "metatags": [
          {
            "og:image": "https://img1.wsimg.com/isteam/ip/c2742189-fef6-4c03-bfe2-6203341313c4/20220224_110003.jpg",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "JG Ranch",
            "theme-color": "#008D55",
            "og:site_name": "JG Ranch",
            "author": "JG Ranch",
            "og:title": "JG Ranch",
            "og:description": "With a variety of fresh produce, JG Ranch is a one-stop-shop for all your farm-to-table goods! Come check out the family-operated farm in Brooksville today!",
            "twitter:image": "https://img1.wsimg.com/isteam/ip/c2742189-fef6-4c03-bfe2-6203341313c4/20220224_110003.jpg",
            "twitter:image:alt": "JG Ranch",
            "twitter:site": "@jgranchFL",
            "viewport": "width=device-width, initial-scale=1",
            "twitter:description": "With a variety of fresh produce, JG Ranch is a one-stop-shop for all your farm-to-table goods! Come check out the family-operated farm in Brooksville today!",
            "og:locale": "en_US",
            "og:url": "https://jgranch.com/"
          }
        ],
        "cse_image": [
          {
            "src": "https://img1.wsimg.com/isteam/ip/c2742189-fef6-4c03-bfe2-6203341313c4/20220224_110003.jpg"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "J. G. Ballard's Brilliant, Not “Good” Writing - The ... - The Paris Review",
      "htmlTitle": "J. G. Ballard's Brilliant, Not “Good” Writing - The ... - The Paris Review",
      "link": "https://www.theparisreview.org/blog/2023/09/22/j-g-ballards-brilliant-not-good-writing/",
      "displayLink": "www.theparisreview.org",
      "snippet": "Sep 22, 2023 ... Ballard's intelligence (and I use that term in its dual sense of intellectual capacity and source/input feed or “intel”) is expanded, ...",
      "htmlSnippet": "Sep 22, 2023 \u003cb\u003e...\u003c/b\u003e Ballard&#39;s intelligence (and I use that term in its dual sense of intellectual capacity and source/input feed or “intel”) is expanded,&nbsp;...",
      "cacheId": "GlAgFYJr0dEJ",
      "formattedUrl": "https://www.theparisreview.org/.../j-g-ballards-brilliant-not-good-writing/",
      "htmlFormattedUrl": "https://www.theparisreview.org/.../j-g-ballards-brilliant-not-good-writing/",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPJ62WdGOEQbcmL3elu91iIKumnbGv7oDsaYrQCgLhJ-C8m1VCJXL8IJNQ",
            "width": "300",
            "height": "168"
          }
        ],
        "metatags": [
          {
            "og:image": "https://www.theparisreview.org/blog/wp-content/uploads/2023/09/japanese-car-accident.jpg",
            "copyright": "Copyright © 2024 The Paris Review",
            "article:published_time": "2023-09-22T14:30:15-04:00",
            "twitter:card": "summary_large_image",
            "og:site_name": "The Paris Review",
            "msapplication-tileimage": "https://www.theparisreview.org/blog/wp-content/uploads/2017/07/cropped-hadada-1-270x270.png",
            "og:description": "“Ballard’s novels are radical in the true sense, in that they reach back to and reanimate the novel’s very roots.”",
            "twitter:creator": "@parisreview",
            "article:publisher": "https://www.facebook.com/parisreview/",
            "og:image:secure_url": "https://www.theparisreview.org/blog/wp-content/uploads/2023/09/japanese-car-accident.jpg",
            "twitter:image": "https://www.theparisreview.org/blog/wp-content/uploads/2023/09/japanese-car-accident.jpg",
            "twitter:site": "@parisreview",
            "article:modified_time": "2023-09-28T03:57:27-04:00",
            "og:type": "article",
            "article:section": "The Review’s Review",
            "twitter:title": "J. G. Ballard’s Brilliant, Not “Good” Writing - The Paris Review",
            "author": "Tom McCarthy",
            "og:title": "J. G. Ballard’s Brilliant, Not “Good” Writing",
            "og:updated_time": "2023-09-28T03:57:27-04:00",
            "article:tag": "Crash",
            "viewport": "width=device-width, initial-scale=1",
            "twitter:description": "“Ballard’s novels are radical in the true sense, in that they reach back to and reanimate the novel’s very roots.”",
            "onesignal": "wordpress-plugin",
            "og:locale": "en_US",
            "og:url": "https://www.theparisreview.org/blog/2023/09/22/j-g-ballards-brilliant-not-good-writing/"
          }
        ],
        "cse_image": [
          {
            "src": "https://www.theparisreview.org/blog/wp-content/uploads/2023/09/japanese-car-accident.jpg"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "J.G. Harrington - Special Counsel // Cooley // Global Law Firm",
      "htmlTitle": "\u003cb\u003eJ.G.\u003c/b\u003e Harrington - Special Counsel // Cooley // Global Law Firm",
      "link": "https://www.cooley.com/people/jg-harrington",
      "displayLink": "www.cooley.com",
      "snippet": "About J.G.. J.G. has worked with telephone, mobile communications, new technologies and cable television clients on federal and state regulatory issues for more ...",
      "htmlSnippet": "About \u003cb\u003eJ.G.\u003c/b\u003e. \u003cb\u003eJ.G.\u003c/b\u003e has worked with telephone, mobile communications, new technologies and cable television clients on federal and state regulatory issues for more&nbsp;...",
      "cacheId": "QT_x1kNknEsJ",
      "formattedUrl": "https://www.cooley.com/people/jg-harrington",
      "htmlFormattedUrl": "https://www.cooley.com/people/\u003cb\u003ejg\u003c/b\u003e-harrington",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSujEvwSJjPkvStW9Y9DLuEKvtI-yhpOoY4kpnMpeqML0aQkWBt2ZyjbwCR",
            "width": "310",
            "height": "163"
          }
        ],
        "metatags": [
          {
            "og:image": "https://www.cooley.com/-/media/cooley/media-logos/cooley-social-image.png",
            "og:image:width": "1200",
            "twitter:card": "summary",
            "twitter:title": "J.G. Harrington - Special Counsel // Cooley // Global Law Firm",
            "theme-color": "#ff0000",
            "twitter:site": "@CooleyLLP",
            "viewport": "width=device-width, initial-scale=1.0",
            "og:title": "J.G. Harrington - Special Counsel // Cooley // Global Law Firm",
            "og:image:height": "630",
            "og:url": "https://www.cooley.com/people/jg-harrington",
            "twitter:creator": "@CooleyLLP",
            "twitter:image": "https://www.cooley.com/-/media/cooley/media-logos/cooley-twitter-red-box-600.png"
          }
        ],
        "cse_image": [
          {
            "src": "https://www.cooley.com/-/media/cooley/media-logos/cooley-social-image.png"
          }
        ]
      }
    },
    {
      "kind": "customsearch#result",
      "title": "x86 - Regarding cmp / jg, jle, etc in AT&T syntax assembly - Stack ...",
      "htmlTitle": "x86 - Regarding cmp / \u003cb\u003ejg\u003c/b\u003e, jle, etc in AT&amp;T syntax assembly - Stack ...",
      "link": "https://stackoverflow.com/questions/29574147/regarding-cmp-jg-jle-etc-in-att-syntax-assembly",
      "displayLink": "stackoverflow.com",
      "snippet": "Apr 11, 2015 ... Regarding cmp / jg, jle, etc in AT&T syntax assembly ... as it jumps to \u003c something \u003e when eax has the value 3. Am I missing something, or does ...",
      "htmlSnippet": "Apr 11, 2015 \u003cb\u003e...\u003c/b\u003e Regarding cmp / \u003cb\u003ejg\u003c/b\u003e, jle, etc in AT&amp;T syntax assembly ... as it jumps to &lt; something &gt; when eax has the value 3. Am I missing something, or does&nbsp;...",
      "cacheId": "yatJBM7oSjgJ",
      "formattedUrl": "https://stackoverflow.com/.../regarding-cmp-jg-jle-etc-in-att-syntax-assembl...",
      "htmlFormattedUrl": "https://stackoverflow.com/.../regarding-cmp-\u003cb\u003ejg\u003c/b\u003e-jle-etc-in-att-syntax-assembl...",
      "pagemap": {
        "cse_thumbnail": [
          {
            "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQYl7zuT3cw_BBRAyhdQEbQuBgqdNHXKHIYKL8S8ly8x9L_XA9sdwSmiHs",
            "width": "225",
            "height": "225"
          }
        ],
        "qapage": [
          {
            "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "primaryimageofpage": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "name": "Regarding cmp / jg, jle, etc in AT&T syntax assembly",
            "description": "So every single resource online tells me that something like this: cmp %eax, %ebx jg \u003c something \u003e would jump to \u003c something \u003e if eax was greater than ebx. But I have another piece of code"
          }
        ],
        "question": [
          {
            "image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a",
            "upvotecount": "7",
            "commentcount": "1",
            "answercount": "2",
            "name": "Regarding cmp / jg, jle, etc in AT&T syntax assembly",
            "datecreated": "2015-04-11T04:33:03",
            "text": "So every single resource online tells me that something like this: cmp %eax, %ebx jg \u003c something \u003e would jump to \u003c something \u003e if eax was greater than ebx. But I have another piece of code...",
            "url": "Share"
          }
        ],
        "answer": [
          {
            "upvotecount": "9",
            "commentcount": "2",
            "text": "When we read something like cmp $0x2, %eax jg \u003c something \u003e we know the assembler used is one that reverses the position of the operands of an instruction. That's because Intel's syntax dictates...",
            "datecreated": "2015-04-11T10:51:55",
            "url": "Share"
          },
          {
            "upvotecount": "1",
            "text": "See if THIS ANSWER helps you. If not, ask for clarification. Scroll down past the other guy's source code and stuff in that answer to search for this string... This biz, the cmpl %eax,%edx...",
            "datecreated": "2015-04-11T05:30:43",
            "url": "Share"
          }
        ],
        "person": [
          {
            "name": "Mikey Chen"
          },
          {
            "name": "Fifoernik"
          },
          {
            "name": "User.1"
          }
        ],
        "metatags": [
          {
            "og:image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
            "og:type": "website",
            "twitter:card": "summary",
            "twitter:title": "Regarding cmp / jg, jle, etc in AT&T syntax assembly",
            "og:site_name": "Stack Overflow",
            "twitter:domain": "stackoverflow.com",
            "viewport": "width=device-width, height=device-height, initial-scale=1.0, minimum-scale=1.0",
            "twitter:description": "So every single resource online tells me that something like this:\n\ncmp %eax, %ebx\njg &lt; something &gt;\r\nwould jump to &lt; something \u003e if eax was greater than ebx. But I have another piece of code",
            "og:url": "https://stackoverflow.com/questions/29574147/regarding-cmp-jg-jle-etc-in-att-syntax-assembly"
          }
        ],
        "cse_image": [
          {
            "src": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"
          }
        ]
      }
    }
  ]
}
","status":200,"url":"https://www.googleapis.com/customsearch/v1?key=AIzaSyBSyML5OLEjFovkDbY7d4rBF5rJ7DLtDqI&cx=f213d44e1ec82403c&q=jg%27}"},"revalidate":31536000,"tags":[]}